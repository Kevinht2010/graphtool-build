{"version":3,"sources":["logo.svg","display/graphs/Node.js","display/graphs/Edge.js","display/graphs/GraphVisual.js","display/input/InputGraph.js","display/input/Profile.js","display/input/Properties.js","display/input/Inputs.js","display/error/Error.js","display/data/Data.js","display/authtokens/TokenPage.js","routing/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["Node","props","useState","position","setPosition","labelX","labelY","useEffect","style","userSelect","onMouseDown","e","dragStart","id","onMouseUp","dragEnd","cx","cy","r","stroke","stroke-width","fill","pointerEvents","textAnchor","transform","fontSize","dist","a","b","Math","sqrt","pow","Edge","c","d","node1","setNode1","node2","setNode2","bendPos","setBendPos","bent","posX","posY","points","A","B","C","angle","acos","K","sin","round","laf","PI","saf","join","calcCirclePath","pointer-events","shape-rendering","GraphVisual","mouseIn","setMouseIn","dragId","setDragId","isDraggingNode","setIsDraggingNode","isDraggingEdge","setIsDraggingEdge","originX","setOriginX","originY","setOriginY","prevPosition","setPrevPosition","node","deletingVertex","deleteVertex","clientX","clientY","vertices","bendPositions","get","edges","dragging","newX","newY","updateData","updateBendPositions","newVertices","slice","setVertices","newBendPositions","Map","set","setBendPositions","height","width","backgroundColor","onMouseOver","onMouseLeave","onMouseMove","forEach","edge","push","updateEdges","map","InputGraph","addEdge","v1","v2","test","Number","isInteger","length","key","console","log","this","i","valid","errors","neighbor","withRouter","email","setEmail","emailError","setEmailError","sent","setSent","graphSaved","setGraphSaved","graphRetrieved","setGraphRetrieved","failedRetrieve","setFailedRetrieve","modal","authenticate","String","toLowerCase","validateEmail","fetch","method","body","JSON","stringify","headers","then","response","json","msg","exit","setModal","successfullyRetrieved","Fragment","marginTop","message","type","showIcon","successfullySaved","unsuccessfulRetrieve","loggedIn","footer","onClick","logOut","top","bodyStyle","minHeight","title","localStorage","getItem","visible","onOk","onCancel","display","justifyContent","marginBottom","flexWrap","margin","fontWeight","Array","from","entries","parse","bp","bentpos","setGraph","getProfile","marginRight","name","Item","label","onChange","target","value","getLogin","Algorithms","maxCycle","minCycle","MAX_VALUE","edges2","G","vertex","visited","v","mx","max","longestPathFromVertex","count","BFS","k","origin","idx","visited2","cycles","getCyclesFromVertex","adjMatrix","j","getComponents","generateAdjMatrix","D","laplacian","math","pop","spanningTrees","getSpanningTrees","countCycles","minCyc","maxCyc","property","getLongestPath","Properties","setAdjList","dataSource","setDataSource","algoService","aList","makeAdjList","getProperties","columns","dataIndex","pagination","pageSize","Inputs","showProperties","setShowProperties","showInput","setShowInput","editEdge","setEditEdge","setDeleteEdge","setAddEdge","addEdgeValidStatus1","setAddEdgeValidStatus1","addEdgeValidStatus2","setAddEdgeValidStatus2","setV1","setV2","verticesInput","setVerticesInput","vertexMessage","setVertexMessage","setEdges","edgesMessage","setEdgesMessage","profileModal","setProfileModal","addEdges","inputGraph","clearInput","addOrDeleteEdge","bool","success","deleteEdge","marginLeft","straightenEdges","centerGraph","bottom","UserOutlined","logIn","m","addVertices","validateStatus","help","onPressEnter","autoComplete","min","defaultValue","newEdges","split","hasVertexCount","getGraphInput","content","initialValues","remember","getEditEdge","right","padding","setDeletingVertex","setAddingVertex","Error","Data","updating","setUpdating","edgesMap","bdMap","addingVertex","tryAddVertex","addVertex","x","y","substr1","substr","indexOf","substr2","newKey","newVal","newBendVal","deleteVertexHelper","splice","has","deleteEdgeTest","delete","window","innerWidth","setWidth","handleResize","addEventListener","removeEventListener","overflow","login","logout","useLocation","pathname","replace","setMessage","status","location","href","search","Routes","setLoggedIn","setItem","exact","path","removeItem","component","to","App","Helmet","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.faf03833.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect, useRef} from 'react'\r\n\r\nexport default function Node(props) {\r\n    const [position, setPosition] = useState(props.position);\r\n    \r\n    const labelX = position[0];\r\n    const labelY = position[1];\r\n\r\n    useEffect(() => {\r\n        setPosition(props.position);\r\n    }, [props.position])\r\n\r\n    return (\r\n        <g style={{userSelect:\"none\"}} onMouseDown={e => props.dragStart(e, props.id, true)} onMouseUp={(e) => props.dragEnd(e)}>\r\n            <circle cx={labelX} cy={labelY} r=\"40\" stroke=\"#2ab863\" stroke-width=\"4\" fill=\"#ccffcf\"/>\r\n            <text pointerEvents={\"none\"} textAnchor=\"middle\" transform={`translate(${labelX}, ${labelY + 5})`} fontSize=\"20\">{props.id}</text>\r\n        </g>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\n\r\nfunction Edge(props) {\r\n    const [node1, setNode1] = useState(props.node1);\r\n    const [node2, setNode2] = useState(props.node2);\r\n    const [bendPos, setBendPos] = useState(props.bendPos);\r\n\r\n    let c;\r\n    let d;\r\n    if(props.bendPos.bent === false) {\r\n        c = [(node1.posX + node2.posX)/2, (node1.posY + node2.posY)/2];\r\n        d = \"M \" + node1.posX + \" \" + node1.posY + \" Q \" + c[0] + \" \" + c[1] + \" \" + node2.posX + \" \" + node2.posY;\r\n    } else {\r\n        c = [props.bendPos.posX, props.bendPos.posY];\r\n        d = calcCirclePath([[node2.posX, node2.posY], c, [node1.posX, node1.posY]]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setNode1(props.node1); setNode2(props.node2);\r\n        setBendPos(props.bendPos);\r\n    }, [props.node1, props.node2, props.bendPos])\r\n\r\n    return (\r\n        <svg>\r\n            <svg>\r\n                <circle onMouseDown={(e) => {props.dragStart(e, props.id, false);}} onMouseUp={(e) => props.dragEnd(e)} cx={c[0]} cy={c[1]} r={6}/>\r\n            </svg>\r\n            <svg>\r\n                <path pointer-events=\"none\" d={d} stroke=\"black\" fill=\"transparent\" stroke-width=\"3\" shape-rendering=\"geometricPrecision\"/>\r\n            </svg>\r\n        </svg>\r\n    )\r\n}\r\n\r\nfunction calcCirclePath(points){\r\n    var a = points[0]\r\n    var b = points[2]\r\n    var c = points[1]\r\n  \r\n    var A = dist(b, c)\r\n    var B = dist(c, a)\r\n    var C = dist(a, b)\r\n  \r\n    var angle = Math.acos((A*A + B*B - C*C)/(2*A*B))\r\n  \r\n    //calc radius of circle\r\n    var K = .5*A*B*Math.sin(angle)\r\n    var r = A*B*C/4/K\r\n    r = Math.round(r*1000)/1000\r\n  \r\n    //large arc flag\r\n    var laf = +(Math.PI/2 > angle)\r\n  \r\n    //sweep flag\r\n    var saf = +((b[0] - a[0])*(c[1] - a[1]) - (b[1] - a[1])*(c[0] - a[0]) < 0) \r\n  \r\n    return ['M', a, 'A', r, r, 0, laf, saf, b].join(' ')\r\n  }\r\n  \r\n  function dist(a, b){\r\n    return Math.sqrt(\r\n      Math.pow(a[0] - b[0], 2) +\r\n      Math.pow(a[1] - b[1], 2))\r\n  }\r\n\r\nexport default Edge\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport Node from './Node';\r\nimport Edge from './Edge';\r\n\r\nexport default function GraphVisual(props) {\r\n    const [mouseIn, setMouseIn] = useState(false);\r\n    const [dragId, setDragId] = useState();\r\n    const [isDraggingNode, setIsDraggingNode] = useState(false);\r\n    const [isDraggingEdge, setIsDraggingEdge] = useState(false);\r\n\r\n    const [originX, setOriginX] = useState(0);\r\n    const [originY, setOriginY] = useState(0);\r\n    const [prevPosition, setPrevPosition] = useState([]);\r\n\r\n    const dragStart = (e, id, node) => {\r\n        if(mouseIn === true) {\r\n            if(props.deletingVertex) {\r\n                props.deleteVertex(id);\r\n                return;\r\n            }\r\n            setDragId(id);\r\n            setOriginX(e.clientX);\r\n            setOriginY(e.clientY);\r\n\r\n            if(node) {\r\n                setIsDraggingNode(true);\r\n                setPrevPosition([props.vertices[id].posX, props.vertices[id].posY]);\r\n            } else {\r\n                setIsDraggingEdge(true);\r\n                if(props.bendPositions.get(id).bent === true) {\r\n                    setPrevPosition([props.bendPositions.get(id).posX, props.bendPositions.get(id).posY]);\r\n                } else {  \r\n                    let node1 = props.vertices[props.edges.get(id).node1];\r\n                    let node2 = props.vertices[props.edges.get(id).node2];\r\n                    setPrevPosition([(node1.posX + node2.posX) / 2, (node1.posY + node2.posY) / 2]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const dragging = (e) => {\r\n        if(isDraggingNode && mouseIn) {\r\n            let newX = e.clientX - originX;\r\n            let newY =  e.clientY - originY;\r\n            updateData({\r\n                \"id\": dragId, \r\n                \"posX\": prevPosition[0] + newX, \r\n                \"posY\": prevPosition[1] + newY\r\n            });\r\n        } else if(isDraggingEdge && mouseIn) {\r\n            let newX = e.clientX - originX;\r\n            let newY =  e.clientY - originY;\r\n            updateBendPositions({\r\n                \"id\": dragId, \r\n                \"posX\": prevPosition[0] + newX, \r\n                \"posY\": prevPosition[1] + newY,\r\n                \"bent\": true\r\n            });\r\n        }\r\n    }\r\n\r\n    const dragEnd = () => {\r\n        setIsDraggingNode(false);\r\n        setIsDraggingEdge(false);\r\n    }\r\n\r\n    const updateData = (a) => {\r\n        let newVertices = props.vertices.slice(0);\r\n        newVertices[a.id] = a;\r\n        props.setVertices(newVertices);\r\n    }\r\n\r\n    const updateBendPositions = (a) => {\r\n        let newBendPositions = new Map(props.bendPositions.set(a.id, a));\r\n        props.setBendPositions(newBendPositions);\r\n    }\r\n\r\n    const updateVertices = (a) => {\r\n        return props.vertices.map(node => {\r\n            return (<Node dragStart={dragStart} dragEnd={dragEnd} id={node.id} position={[node.posX, node.posY]}/>);\r\n        })\r\n    }\r\n\r\n    const updateEdges = (a) => {\r\n        let e = [];\r\n        props.edges.forEach((edge) => {\r\n            e.push(<Edge dragStart={dragStart} dragEnd={dragEnd} id={edge.id} node1={props.vertices[edge.node1]} \r\n                    node2={props.vertices[edge.node2]} bendPos={props.bendPositions.get(edge.id)}/>)\r\n        })\r\n        return e;\r\n    }\r\n\r\n    useEffect(() => {}, [props.vertices, props.bendPositions, props.bendPositions, props.edges, props.vertices])\r\n\r\n    return (\r\n        <svg style={{height:\"600vh\", width:\"600vw\", backgroundColor: '#dbedff'}} \r\n            onMouseOver={() => {setMouseIn(true)}} onMouseLeave={(e) => {dragging(e); setMouseIn(false); dragEnd()}}\r\n            onMouseMove={(e) => {dragging(e)}} onMouseUp={() => dragEnd()}>\r\n            {updateEdges()}\r\n            {updateVertices()}\r\n        </svg>\r\n    )\r\n}\r\n\r\n","export default class InputGraph {\r\n    constructor(vertices, edges) {\r\n        console.log(edges);\r\n        this.vertices = [];\r\n        for(let i = 0; i < vertices; ++i) {\r\n            this.vertices.push({\"id\": i, \"posX\": 500, \"posY\": 500});\r\n        }\r\n\r\n        this.edges = new Map;\r\n        this.bendPositions = new Map;\r\n        this.valid = true;\r\n        this.errors = [];\r\n        for(let i = 0; i < edges.length; ++i) {\r\n            this.errors.push(\"none\");\r\n            for(let neighbor of edges[i]) {\r\n                if(!this.addEdge(i, neighbor)) {\r\n                    this.valid = false;\r\n                    this.errors[i] = (\"error\");\r\n                    break;\r\n                } else if (neighbor === \"\") {\r\n                    this.errors[i] = (\"error\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    addEdge = (v1, v2) => {\r\n        if(!(/^\\d+$/.test(v1)) || !(/^\\d+$/.test(v2))) {\r\n            return false;\r\n        }\r\n\r\n        v1 = Number(v1);\r\n        v2 = Number(v2);\r\n        if(!(Number.isInteger(v1)) || v1 > this.vertices.length - 1) {\r\n            return false;\r\n        }\r\n        if(!(Number.isInteger(v2)) || v2 > this.vertices.length - 1) {\r\n            return false;\r\n        }\r\n\r\n        if(v1 == v2) {\r\n            return false;\r\n        }\r\n        \r\n        let key;\r\n        if(v1 > v2) {\r\n            key = v2 + \".\" + v1;\r\n        } else {\r\n            key = v1 + \".\" + v2;\r\n        }\r\n        \r\n        this.edges.set(key, {\r\n            \"id\": key,\r\n            \"node1\": v1,\r\n            \"node2\": v2,\r\n            \"bent\": false,\r\n            \"posX\": null,\r\n            \"posY\": null\r\n        });\r\n\r\n\r\n        this.bendPositions.set(key, {\r\n            \"id\": key,\r\n            \"bent\": false,\r\n            \"posX\": null,\r\n            \"posY\": null\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n}","import React, {useEffect, useState} from 'react'\r\nimport { Alert, Button, Modal, Input, Form, InputNumber } from 'antd';\r\nimport { useLocation, withRouter } from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\nfunction Profile(props) {\r\n    const [email, setEmail] = useState();\r\n    const [emailError, setEmailError] = useState(false);\r\n    const [sent, setSent] = useState(false);\r\n    const [graphSaved, setGraphSaved] = useState(false);\r\n    const [graphRetrieved, setGraphRetrieved] = useState(false);\r\n    const [failedRetrieve, setFailedRetrieve] = useState(false);\r\n \r\n    useEffect(() => {}, [props.modal]);\r\n\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    const authenticate = (email) => {\r\n        if(validateEmail(email)) {\r\n            fetch('https://graphtt.herokuapp.com/login', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    'email': email, // change here\r\n                    'route': \"https://kevinht2010.github.io/graphtool/#/\"\r\n                }),\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            }).then(response => response.json()).then(msg => setSent(true))\r\n        } else {\r\n            setEmailError(true);\r\n        }\r\n    }\r\n\r\n    const getGraph = () => {\r\n        if(props.loggedIn == true) {\r\n            fetch('https://graphtt.herokuapp.com/api/retrieve', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    'type': \"retrieve\",\r\n                    'email': localStorage.getItem(\"email\")\r\n                }),\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            }).then(response => response.json()).then(msg => {console.log(msg); setGraphRetrieved(true)\r\n                let e = new Map(JSON.parse(msg.edges));\r\n                let bp = new Map(JSON.parse(msg.bentpos));\r\n                props.setGraph(e, JSON.parse(msg.vertices), bp);\r\n            })\r\n        }\r\n    }\r\n\r\n    const saveGraph = () => {\r\n        console.log(props.bendPositions)\r\n        if(props.loggedIn == true) {\r\n            fetch('https://graphtt.herokuapp.com/api/upload', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    'type': \"upload\",\r\n                    'email': localStorage.getItem(\"email\"),\r\n                    'edges': JSON.stringify(Array.from(props.edges.entries())),\r\n                    'vertices': JSON.stringify(props.vertices),\r\n                    'bentpos': JSON.stringify(Array.from(props.bendPositions.entries()))\r\n                }),\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            }).then(response => response.json()).then(msg => {setGraphSaved(true)})\r\n        }\r\n    }\r\n\r\n    const exit = () => {\r\n        props.setModal(false); setEmailError(false); setSent(false); setGraphRetrieved(false); setGraphSaved(false); setFailedRetrieve(false);\r\n    }\r\n\r\n    const getProfile = () => {\r\n        let footer = (\r\n            <React.Fragment>\r\n                <Button key=\"back\" onClick={() => {exit()}}>\r\n                    Return\r\n                </Button>\r\n                <Button type=\"primary\" key=\"back\" onClick={() => {exit(); props.logOut()}}>\r\n                    Log out\r\n                </Button>\r\n            </React.Fragment>\r\n        )\r\n\r\n        return (\r\n            <Modal style={{top: \"22%\"}} width={\"550px\"} bodyStyle={{minHeight:\"120px\"}} title={\"Logged into \" + localStorage.getItem(\"email\")} visible={props.modal} \r\n                    onOk={() => {exit()}} onCancel={() => {exit()}}\r\n                    footer={footer}>\r\n                <div style={{display:'flex', width:\"100%\", justifyContent:\"center\", marginBottom:\"5px\", marginTop:\"-15px\", flexWrap:\"wrap\"}}>\r\n                    <div style={{display:\"flex\", flexWrap:'wrap', justifyContent:\"center\", width:\"220px\"}}>\r\n                        <div style={{margin:\"14px\", fontSize:\"18px\", fontWeight:\"480\"}}>Save current graph:</div>\r\n                        <Button type=\"primary\" onClick={() => {saveGraph(); setGraphSaved(false); setGraphRetrieved(false); setFailedRetrieve(false)}}>\r\n                            Save Graph\r\n                        </Button>\r\n                    </div>\r\n                    <div style={{display:\"flex\", flexWrap:'wrap', justifyContent:\"center\", width:\"220px\"}}>\r\n                        <div style={{margin:\"14px\", fontSize:\"18px\", fontWeight:\"480\"}}>Retrieve saved graph:</div>\r\n                        <Button type=\"primary\" onClick={() => {getGraph(); setGraphSaved(false); setGraphRetrieved(false); setFailedRetrieve(false)}}>\r\n                            Retrieve Graph\r\n                        </Button>\r\n                    </div>\r\n                    <div style={{marginTop:\"45px\", marginBottom:\"-15px\"}}>(Currently this feature is limited to 1 graph per user)</div>\r\n                </div>\r\n                {graphSaved ? successfullySaved() : <React.Fragment/>}\r\n                {graphRetrieved ? successfullyRetrieved() : <React.Fragment/>}\r\n                {failedRetrieve ? unsuccessfulRetrieve() : <React.Fragment/>}\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    const sentMessage = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"23px\"}}>\r\n                    <Alert message={\"Email successfully sent to \" + email} type=\"success\" showIcon/>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const emailErrorMessage = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"23px\"}}>\r\n                    <Alert message=\"Invalid Email\" type=\"error\" showIcon />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const successfullyRetrieved = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"25px\"}}>\r\n                    <Alert message={\"Graph successfully retrieved\"} type=\"success\" showIcon/>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const successfullySaved = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"25px\"}}>\r\n                    <Alert message={\"Graph successfully saved\"} type=\"success\" showIcon/>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const unsuccessfulRetrieve = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"25px\"}}>\r\n                    <Alert message=\"No graph to retrieve. Save a graph first!\" type=\"error\" showIcon />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const getLogin = () => {\r\n        let footer = (\r\n            <React.Fragment>\r\n                <Button key=\"back\" onClick={() => {exit()}} style={{marginTop:\"10px\", marginBottom:\"10px\", marginRight:\"46%\"}}>\r\n                    Return\r\n                </Button>\r\n                <Button type=\"primary\" key=\"back\" onClick={() => {authenticate(email)}}>\r\n                    Send Confirmation Email\r\n                </Button>\r\n            </React.Fragment>\r\n        )\r\n\r\n        return (\r\n            <Modal style={{top: \"22%\"}} width={\"550px\"} bodyStyle={{minHeight:\"100px\"}} title=\"Log In To Save Graphs\" visible={props.modal} \r\n                    onOk={() => {exit()}} onCancel={() => {exit()}}\r\n                    footer={footer} onClick={() => setEmailError(false)}>\r\n                <div onClick={() => {setEmailError(false);}}>\r\n                <Form name=\"basic\" style={{height:\"30px\"}}>\r\n                    <Form.Item\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                    >\r\n                        <Input onChange={(e) => {setEmail(e.target.value)}}/>\r\n                    </Form.Item>\r\n                </Form>\r\n                {sent ? sentMessage() : <React.Fragment/>}\r\n                {emailError ? emailErrorMessage() : <React.Fragment/>}\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.loggedIn == true ?  getProfile() : getLogin()}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(Profile)\r\n","import React, { useState } from 'react'\r\nimport { useEffect } from 'react';\r\nimport { Table } from 'antd';\r\nimport * as math from 'mathjs'\r\n\r\nclass Algorithms {\r\n    maxCycle = 0;\r\n    minCycle = Number.MAX_VALUE;\r\n\r\n    edges = [\r\n        [1,2,3,4],\r\n        [0,2,3,4],\r\n        [0,1,3,4],\r\n        [0,1,2,4],\r\n        [0,1,2,3],\r\n        [6,7,8,9],\r\n        [5,7,8,9],\r\n        [5,6,8,9],\r\n        [5,6,7,9],\r\n        [5,6,7,8],\r\n        [11,12],\r\n        [10,12],\r\n        [10,11],\r\n    ]\r\n    \r\n    edges2 = [\r\n        [1,2,3],\r\n        [0,2,3],\r\n        [0,1,3],\r\n        [0,1,2]\r\n    ]\r\n    \r\n    BFS(G, vertex, visited) {\r\n        let vertices = [vertex];\r\n        visited[vertex] = 1;\r\n    \r\n        while(vertices.length > 0) {\r\n            let newVertices = [];\r\n            for(let v of vertices) {\r\n                for(let i = 0; i < G[v].length; ++i) {\r\n                    if(visited[G[v][i]] != 1) {\r\n                        ++visited[G[v][i]];\r\n                        newVertices.push(G[v][i]);\r\n                    }\r\n                }\r\n            }\r\n            vertices = newVertices;\r\n        }\r\n    }\r\n    \r\n    longestPathFromVertex(G, vertex, visited) {\r\n        let mx = 0;\r\n        visited[vertex] = 1;\r\n        for(let v of G[vertex]) {\r\n            if(visited[v] != 1) {\r\n                mx = Math.max(mx, 1 + this.longestPathFromVertex(G, v, visited));\r\n            }\r\n        }\r\n    \r\n        return mx;\r\n    }\r\n    \r\n    getComponents(G) {\r\n        let count = 0;\r\n        let visited = new Array(G.length).fill(0)\r\n        for(let i = 0; i < G.length; ++i) {\r\n            if(visited[i] == 0) {\r\n                ++count;\r\n                this.BFS(G, i, visited);\r\n            }\r\n        }\r\n    \r\n        return count;\r\n    }\r\n    \r\n    getLongestPath(G) {\r\n        let mx = 0;\r\n        for(let k = 0; k < G.length; ++k) {\r\n            mx = Math.max(this.longestPathFromVertex(G, k, new Array(G.length).fill(0)), mx);\r\n        }\r\n    \r\n        return mx;\r\n    }\r\n    \r\n    getCyclesFromVertex(G, vertex, visited, origin, idx, visited2) {\r\n        let cycles = 0;\r\n        visited[vertex] = 1;\r\n        for(let v of G[vertex]) {\r\n            if(visited2[v] == 0) {\r\n                if(v == origin && idx >= 2) {\r\n                    ++cycles;\r\n                    if(idx > this.maxCycle) {\r\n                        this.maxCycle = idx;\r\n                    }\r\n                    if(idx < this.minCycle) {\r\n                        this.minCycle = idx;\r\n                    }\r\n                } else if(visited[v] == 0) {\r\n                    cycles += this.getCyclesFromVertex(G, v, visited, origin, idx+1, visited2);\r\n                }\r\n            }\r\n        }\r\n        visited[vertex] = 0;\r\n        return cycles;\r\n    }\r\n    \r\n    generateAdjMatrix(G) {\r\n        let adjMatrix = new Array(G.length);\r\n        for(let i = 0; i < G.length; ++i) {\r\n            adjMatrix[i] = new Array(G.length).fill(0);\r\n        }\r\n    \r\n        for(let i = 0; i < G.length; ++i) {\r\n            for(let j = 0; j < G[i].length; ++j) {\r\n                adjMatrix[i][G[i][j]] = 1;\r\n            }\r\n        }\r\n        return adjMatrix;\r\n    }\r\n    \r\n    getSpanningTrees(G) {\r\n        if(this.getComponents(G) != 1) {\r\n            return 0;\r\n        }\r\n    \r\n        let adjMatrix = this.generateAdjMatrix(G);\r\n        let D = new Array(G.length);\r\n        for(let i = 0; i < G.length; ++i) {\r\n            D[i] = new Array(G.length).fill(0);\r\n        } \r\n        for(let i = 0; i < G.length; ++i) {\r\n            D[i][i] = G[i].length;\r\n        }\r\n\r\n        let laplacian = math.subtract(D, adjMatrix);\r\n        laplacian.pop();\r\n\r\n        for(let i = 0; i < G.length-1; ++i) {\r\n            laplacian[i].pop();\r\n        }\r\n\r\n        return math.det(laplacian);\r\n    }\r\n    \r\n    countCycles(G) {\r\n        let visited2 = new Array(G.length).fill(0);\r\n        let cycles = 0;\r\n        for(let i = 0; i < G.length; ++i) {\r\n            cycles += this.getCyclesFromVertex(G, i, new Array(G.length).fill(0), i, 0, visited2) / 2;\r\n            visited2[i] = 1;\r\n        }\r\n    \r\n        return cycles;\r\n    }\r\n\r\n    getProperties(G) {\r\n        let spanningTrees = this.getSpanningTrees(G);\r\n        let cycles = this.countCycles(G);\r\n        let minCyc = this.minCycle;\r\n        let maxCyc = this.maxCycle;\r\n        let longestPath = this.getLongestPath(G);\r\n        let components = this.getComponents(G);\r\n    \r\n        let properties = [\r\n            {\r\n                key: '1',\r\n                property:'Longest Path',\r\n                value: longestPath\r\n            },\r\n            {\r\n                key: '2',\r\n                property: 'Number of Components',\r\n                value: components\r\n            },\r\n            {\r\n                key: '3',\r\n                property: 'Spanning Trees',\r\n                value: spanningTrees\r\n            },\r\n            {\r\n                key: '4',\r\n                property:'Number of Cycles',\r\n                value: cycles\r\n            },\r\n            {\r\n                key: '5',\r\n                property:'Longest Cycle',\r\n                value: minCyc == Number.MAX_VALUE ? \"Null\" : minCyc\r\n            },\r\n            {\r\n                key: '6',\r\n                property:'Shortest Cycle',\r\n                value: maxCyc == 0 ? \"Null\" : maxCyc\r\n            }\r\n        ]\r\n    \r\n        return properties;\r\n    }\r\n}\r\n\r\nexport default function Properties(props) {\r\n    const [vertices, setVertices] = useState(0);\r\n    const [adjList, setAdjList] = useState();\r\n    const [adjMatrix, setAdjMatrix] = useState();\r\n    const [dataSource, setDataSource] = useState();\r\n    const algoService = new Algorithms();\r\n    \r\n    let columns = [\r\n        {\r\n            title: 'Property',\r\n            dataIndex: 'property',\r\n            key: 'name',\r\n            width: 250\r\n        },\r\n        {\r\n            title: 'Value',\r\n            dataIndex: 'value',\r\n            key: 'val',\r\n            width: 120\r\n        },\r\n    ];\r\n\r\n    const makeAdjList = (v, edges) => {\r\n        let aList = new Array(v);\r\n        for(let i = 0; i < v; ++i) {\r\n            aList[i] = new Array();\r\n        }\r\n\r\n        edges.forEach((value, key) => {\r\n            aList[value.node1].push(value.node2);\r\n            aList[value.node2].push(value.node1);\r\n        })\r\n\r\n        setAdjList(aList);\r\n        return(aList);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let edges = makeAdjList(props.vertices.length, props.edges);\r\n        setDataSource(algoService.getProperties(edges));\r\n    }, [props.vertices, props.edges])\r\n\r\n    return (\r\n        <Table dataSource={dataSource} columns={columns} pagination={{ pageSize: 3 }}/>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport InputGraph from './InputGraph'\r\nimport { Button, Modal, Checkbox, Input, Form, InputNumber, Alert } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons'\r\nimport Profile from './Profile.js'\r\nimport Properties from './Properties';\r\n\r\n\r\n// Will Refactor Soon\r\n\r\n\r\n\r\nexport default function Inputs(props) {\r\n    const [showProperties, setShowProperties] = useState(false);\r\n    const [showInput, setShowInput] = useState(false);\r\n    const [properties, setProperties] = useState([{\"id\": \"cycles\", \"value\": \"5\"}]);\r\n\r\n    const [editEdge, setEditEdge] = useState(false);\r\n    const [deleteEdge, setDeleteEdge] = useState(false);\r\n    const [addEdge, setAddEdge] = useState(false);\r\n    const [addEdgeValidStatus1, setAddEdgeValidStatus1] = useState(\"none\");\r\n    const [addEdgeValidStatus2, setAddEdgeValidStatus2] = useState(\"none\");\r\n\r\n    const [v1, setV1] = useState(\"\");\r\n    const [v2, setV2] = useState(\"\");\r\n\r\n    const [verticesInput, setVerticesInput] = useState(1);\r\n    const [vertices, setVertices] = useState(0);\r\n    const [vertexMessage, setVertexMessage] = useState();\r\n    const [edges, setEdges] = useState();\r\n    const [edgesMessage, setEdgesMessage] = useState();\r\n\r\n    const [profileModal, setProfileModal] = useState(false);\r\n\r\n    const addVertices = () => {\r\n        setVertices(verticesInput);\r\n        let k = Array(verticesInput);\r\n        k.fill([]);\r\n        setEdges(k);\r\n        let m = Array(verticesInput);\r\n        m.fill(\"none\")\r\n        setEdgesMessage(m);\r\n    }\r\n\r\n    const addEdges = () => {\r\n        let inputGraph = new InputGraph(vertices, edges);\r\n        if(inputGraph.valid === true) {\r\n            props.setGraph(inputGraph.edges, inputGraph.vertices, inputGraph.bendPositions);\r\n            clearInput();\r\n        } else {\r\n            setEdgesMessage(inputGraph.errors);\r\n        }\r\n    }\r\n\r\n    const clearInput = () => {\r\n        setVertices(0);\r\n        setShowInput(false); \r\n        setVertexMessage(\"none\");\r\n        setEdges();\r\n        setEdgesMessage();\r\n    }\r\n\r\n    const getGraphInput = () => {\r\n        const footer = (\r\n            <React.Fragment>\r\n                <Button key=\"back\" onClick={() => {clearInput()}}>\r\n                    Cancel\r\n                </Button>\r\n                <Button type=\"primary\" onClick={() => {\r\n                        vertices === 0 ? addVertices() : addEdges();\r\n                    }\r\n                }>\r\n                    {vertices === 0 ? \"Continue\" : \"Input Graph\"}\r\n                </Button>\r\n            </React.Fragment>\r\n        )\r\n\r\n        const hasVertexCount = () => {\r\n            if(vertices === 0) {\r\n                return (\r\n                    <Form.Item\r\n                        label=\"Number of Vertices (Max 20)\"\r\n                        name=\"v1\"\r\n                        validateStatus={addEdgeValidStatus1}\r\n                        help={vertexMessage === \"error\" ? \"Invalid Input\" : null}\r\n                    >\r\n                        <InputNumber onPressEnter={(e) => {setVertices(verticesInput)}} autoComplete=\"off\" onChange={(value) => setVerticesInput(value)} \r\n                                    min={1} max={20} defaultValue={1}/>\r\n                    </Form.Item>\r\n                )\r\n            } else {\r\n                let k = [];\r\n                for(let i = 0; i < vertices; ++i) {\r\n                    k.push(\r\n                        <Form.Item\r\n                            validateStatus={edgesMessage[i]}\r\n                            help={edgesMessage[i] === \"error\" ? \"Invalid Input\" : null}\r\n                            label={JSON.stringify(i)}\r\n                        >\r\n                            <Input defaultValue=\"\" style={{width:\"70px\", margin:\"2px\"}} onPressEnter={(e) => {addEdges()}} autoComplete=\"off\" onChange={(e) => \r\n                                    {let newEdges = [...edges]; newEdges[i] = (e.target.value).split(\" \").join(\"\").split(\",\"); setEdges(newEdges);}} />\r\n                        </Form.Item>\r\n                    )\r\n                }\r\n                return (\r\n                    <React.Fragment>\r\n                        <div style={{marginTop:\"-15px\", marginBottom:\"35px\"}}>Edges (adjacency list, seperating neighbors of each vertex with commas)</div>\r\n                        <div style={{display:\"flex\", width:\"350px\", marginLeft:\"auto\", marginRight:\"auto\", flexWrap:\"wrap\", justifyContent:\"space-around\"}}>\r\n                            {k}\r\n                        </div>\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Modal style={{top: \"10%\"}} title=\"Input Graph\" visible={showInput} onCancel={() => {clearInput()}} footer={footer}>\r\n                 <div style={{display:\"flex\", width:\"100%\", justifyContent:\"center\", marginTop:\"10px\", marginBottom:\"-5px\", marginLeft:\"-10px\"}}>\r\n                    <Form\r\n                        onMouseDown={() => {setAddEdgeValidStatus1(\"none\")}}\r\n                        >\r\n                        {hasVertexCount()}\r\n                    </Form>\r\n                 </div>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    const getProperties = () => {\r\n        let content;\r\n        let footer;\r\n\r\n        content = (\r\n            <React.Fragment>\r\n                <Properties vertices={props.vertices} edges={props.edges}/>\r\n                <Alert message=\"Some feature are still in progress (number of spanning forests, planarity, etc.) - please check back in a few days!\" type=\"warning\" showIcon  />\r\n            </React.Fragment>\r\n        )\r\n\r\n        footer = (\r\n            <React.Fragment>\r\n                <Button key=\"submit\" type=\"primary\" onClick={() => {setShowProperties(false)}}>\r\n                    Return\r\n                </Button>\r\n            </React.Fragment>\r\n        )\r\n        \r\n        return (\r\n            <Modal style={{top: \"15%\"}} width={\"600px\"} bodyStyle={{minHeight:\"200px\"}} title=\"Graph Properties\" visible={showProperties} onOk={() => {setShowProperties(false)}} onCancel={() => {setShowProperties(false)}}\r\n                    footer={footer}>\r\n                {content}\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    const addOrDeleteEdge = (bool) => {\r\n        if(v1 !== \"\" && v2 !== \"\") {\r\n            let success;\r\n            if(bool) {\r\n                success = props.addEdge(v1, v2);\r\n            } else {\r\n                success = props.deleteEdge(v1, v2);\r\n            }\r\n            setAddEdgeValidStatus1(success[0]);\r\n            setAddEdgeValidStatus2(success[1]);\r\n            return success;\r\n        } else {\r\n            let k = [];\r\n            if(v1 === \"\") {\r\n                k.push(\"error\")\r\n            } else {\r\n                k.push(\"none\")\r\n            }\r\n\r\n            if(v2 === \"\") {\r\n                k.push(\"error\")\r\n            } else {\r\n                k.push(\"none\");\r\n            }\r\n            setAddEdgeValidStatus1(k[0]);\r\n            setAddEdgeValidStatus2(k[1]);\r\n            return k;\r\n        }\r\n    }\r\n\r\n    const getEditEdge = () => {\r\n        const footer = (\r\n            <React.Fragment>\r\n                <Button key=\"back\" onClick={() => {setEditEdge(false); setAddEdge(false); setDeleteEdge(false)}}>\r\n                    Return\r\n                </Button>\r\n                <Button type=\"primary\" onClick={() => {\r\n                        addEdge ? addOrDeleteEdge(true) : addOrDeleteEdge(false)\r\n                    }\r\n                }>\r\n                    {addEdge ? \"Add Edge\" : \"Delete Edge\"}\r\n                </Button>\r\n            </React.Fragment>\r\n        )\r\n\r\n        return (\r\n            <Modal style={{top: \"25%\"}} title={addEdge ? \"Add Edge\" : \"Delete Edge\"} visible={editEdge} onCancel={() => {setEditEdge(false); setAddEdge(false); setDeleteEdge(false);\r\n                    setAddEdgeValidStatus1(\"none\"); setAddEdgeValidStatus2(\"none\")}} footer={footer}>\r\n                 <div style={{display:\"flex\", width:\"100%\", justifyContent:\"center\", marginTop:\"10px\", marginBottom:\"-5px\", marginLeft:\"-10px\"}}>\r\n                    <Form\r\n                        initialValues={{ remember: true }}\r\n                        onMouseDown={() => {setAddEdgeValidStatus1(\"none\"); console.log(\"?\")\r\n                        setAddEdgeValidStatus2(\"none\")}}\r\n                        >\r\n                        <Form.Item\r\n                            label=\"Vertex 1\"\r\n                            name=\"v1\"\r\n                            validateStatus={addEdgeValidStatus1}\r\n                            help={addEdgeValidStatus1 === \"error\" ? \"Invalid Input\" : null}\r\n                        >\r\n                            <Input onPressEnter={(e) => {addEdge ? addOrDeleteEdge(true) : addOrDeleteEdge(false)}} autoComplete=\"off\" onChange={(e) => setV1(e.target.value)} />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            validateStatus={addEdgeValidStatus2}\r\n                            help={addEdgeValidStatus2 === \"error\" ? \"Invalid Input\" : null}\r\n                            label=\"Vertex 2\"\r\n                            name=\"v2\"\r\n                        >\r\n                            <Input onPressEnter={(e) => {addEdge ? addOrDeleteEdge(true) : addOrDeleteEdge(false)}} autoComplete=\"off\" onChange={(e) => setV2(e.target.value)} />\r\n                        </Form.Item>\r\n                    </Form>\r\n                 </div>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{position:\"absolute\", display:\"flex\", marginTop:\"20px\", marginLeft:\"20px\"}} >\r\n                <Button style={{margin: \"8px\", height:\"35px\", width:\"150px\", fontSize:\"15px\"}} type=\"primary\" onClick={() => setShowInput(true)}>Input Graph</Button>\r\n                <Button style={{margin: \"8px\", height:\"35px\", width:\"150px\", fontSize:\"15px\"}} type=\"primary\" onClick={() => {props.straightenEdges()}}>Straighten Edges</Button>\r\n                <Button style={{margin: \"8px\", height:\"35px\", width:\"150px\", fontSize:\"15px\"}} type=\"primary\" onClick={() => setShowProperties(true)}>Graph Properties</Button>\r\n                <Button style={{margin: \"8px\", height:\"35px\", width:\"150px\", fontSize:\"15px\"}} type=\"primary\" onClick={() => props.centerGraph()}>Center Graph</Button>\r\n            </div>\r\n            <div style={{position:\"absolute\", marginLeft:\"25px\", bottom:\"calc(6vh + 15px)\"}}>\r\n                <Button style={{width:\"55px\", height:\"45px\"}} type=\"primary\" onClick={() => setProfileModal(true)}>\r\n                    <UserOutlined/>\r\n                </Button>\r\n            </div>\r\n            <Profile modal={profileModal} setModal={setProfileModal} loggedIn={props.loggedIn} logIn={props.logIn} logOut={props.logOut}\r\n                    edges={props.edges} vertices={props.vertices} bendPositions={props.bendPositions} setGraph={props.setGraph}\r\n                    />\r\n            {getGraphInput()}\r\n            {getProperties()}\r\n            {getEditEdge()}\r\n            <div style={{position:\"absolute\", display:\"flex\", right:\"3%\", bottom:\"6%\", flexWrap:\"wrap\", width:\"125px\"}}>\r\n                <Button style={{margin:\"8px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \r\n                        onClick={() => {setDeleteEdge(true); setEditEdge(true);}}>\r\n                    Delete Edge\r\n                </Button>\r\n                <Button style={{margin:\"8px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \r\n                        onClick={() => {props.setDeletingVertex(true)}}>\r\n                    Delete Node\r\n                </Button>\r\n                <Button style={{margin:\"8px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \r\n                    onClick={() => {setAddEdge(true); setEditEdge(true)}}>\r\n                    Add Edge\r\n                </Button>\r\n                <Button style={{margin:\"8px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \r\n                    onClick={() => {props.setAddingVertex(true)}}>\r\n                    Add Node\r\n                </Button>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Alert} from 'antd'\r\n\r\nexport default function Error() {\r\n    return (\r\n        <div style={{width:\"100%\", height:\"100%\"}}>\r\n            <Alert message=\"Mobile view is still under construction! Please check in later (for now, please use the app on pc view - apologies for any inconveniences)\" type=\"warning\" showIcon  />\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport Inputs from '../../display/input/Inputs.js'\r\nimport GraphVisual from '../graphs/GraphVisual.js'\r\nimport Error from '../error/Error.js'\r\n\r\nexport default function Data(props) {\r\n    let tvertices = [{\r\n        \"id\": 0,\r\n        \"posX\": 850,\r\n        \"posY\": 200\r\n    }, {\r\n        \"id\": 1,\r\n        \"posX\": 1150,\r\n        \"posY\": 400\r\n    }, {\r\n        \"id\": 2,\r\n        \"posX\": 550,\r\n        \"posY\": 400\r\n    }, {\r\n        \"id\": 3,\r\n        \"posX\": 1050,\r\n        \"posY\": 720\r\n    }, {\r\n        \"id\": 4,\r\n        \"posX\": 650,\r\n        \"posY\": 720\r\n    }]\r\n\r\n    const [updating, setUpdating] = useState(false);\r\n    const [vertices, setVertices] = useState(null)\r\n\r\n    const edgesArray = [{\r\n        \"id\": \"0.1\",\r\n        \"node1\": 0,\r\n        \"node2\": 1,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"1.2\",\r\n        \"node1\": 1,\r\n        \"node2\": 2,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"1.3\",\r\n        \"node1\": 1,\r\n        \"node2\": 3,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"0.2\",\r\n        \"node1\": 0,\r\n        \"node2\": 2,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"0.3\",\r\n        \"node1\": 0,\r\n        \"node2\": 3,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"2.3\",\r\n        \"node1\": 2,\r\n        \"node2\": 3,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"0.4\",\r\n        \"node1\": 0,\r\n        \"node2\": 4,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"1.4\",\r\n        \"node1\": 1,\r\n        \"node2\": 4,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"2.4\",\r\n        \"node1\": 2,\r\n        \"node2\": 4,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"3.4\",\r\n        \"node1\": 3,\r\n        \"node2\": 4,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }]\r\n\r\n    let edgesMap = new Map();\r\n    let bdMap = new Map();\r\n\r\n    edgesArray.forEach(edge => {\r\n        edgesMap.set(edge.node1 + \".\" + edge.node2, edge);\r\n        bdMap.set(edge.node1 + \".\" + edge.node2, {\"id\": edge.id, \"bent\":edge.bent, \"posX\": edge.posX, \"posY\":edge.posY});\r\n    })\r\n\r\n    const [edges, setEdges] = useState(null);\r\n    const [addingVertex, setAddingVertex] = useState(false);\r\n    const [deletingVertex, setDeletingVertex] = useState(false);\r\n    const [bendPositions, setBendPositions] = useState(null);\r\n\r\n    const setGraph = (edges, vertices, bp) => {\r\n        setUpdating(true);\r\n        setVertices(vertices);\r\n        setEdges(edges);\r\n        setBendPositions(bp);\r\n    }\r\n\r\n    if(vertices === null) {\r\n        setGraph(edgesMap, tvertices, bdMap)\r\n    }\r\n\r\n    const tryAddVertex = (e) => {\r\n        if(addingVertex && vertices.length <= 30) {\r\n            addVertex(e.clientX - 45, e.clientY - 10)\r\n        }\r\n        setAddingVertex(false);\r\n    }\r\n\r\n    const addVertex = (x, y) => {\r\n        vertices.push({\"id\": vertices.length, \"posX\": x, \"posY\":y});\r\n    }\r\n\r\n    const straightenEdges = () => {\r\n        edges.forEach(edge => {\r\n            bdMap.set(edge.node1 + \".\" + edge.node2, {\"id\": edge.id, \"bent\":false, \"posX\": 0, \"posY\": 0});\r\n        })\r\n\r\n        setBendPositions(bdMap);\r\n    }\r\n\r\n    const deleteVertex = (idx) => {\r\n        let newEdges = new Map();\r\n        let newBendPositions = new Map();\r\n        edges.forEach((v) => {\r\n            let key = v.id;\r\n            let substr1 = Number(key.substr(0, key.indexOf('.')));\r\n            let substr2 = Number(key.substr(key.indexOf('.') + 1, key.length - 1));\r\n\r\n            if(substr1 !== idx && substr2 !== idx) {\r\n                if(substr1> idx) --substr1;\r\n                if(substr2 > idx) --substr2;\r\n\r\n                let newKey = substr1 + \".\" + substr2;\r\n                let newVal = v;\r\n                newVal[\"id\"] = newKey;\r\n                newVal[\"node1\"] = substr1;\r\n                newVal[\"node2\"] = substr2;\r\n                let newBendVal = bendPositions.get(key);\r\n                newBendVal[\"id\"] = newKey;\r\n\r\n                newEdges.set(substr1 + \".\" + substr2, newVal);\r\n                newBendPositions.set(substr1 + \".\" + substr2, newBendVal);\r\n            }\r\n        })\r\n        setEdges(newEdges);\r\n        setBendPositions(newBendPositions);\r\n        setDeletingVertex(false);\r\n        deleteVertexHelper(idx)\r\n    }\r\n\r\n    const deleteVertexHelper = (idx) => {\r\n        let k = vertices;\r\n        k.splice(idx, 1);\r\n        for(let i = idx; i < k.length; ++i) {\r\n            --k[i].id;\r\n        }\r\n        setVertices(k);\r\n    }\r\n\r\n    const deleteEdge = (key) => {\r\n        let k = new Map(edges);\r\n        k.delete(key);\r\n        let b = new Map(bendPositions);\r\n        b.delete(key);\r\n        setEdges(k);\r\n        setBendPositions(b);\r\n    }\r\n\r\n    const addEdge = (v1, v2) => {\r\n        let valid = [\"none\", \"none\"];\r\n        v1 = Number(v1);\r\n        v2 = Number(v2);\r\n        if(!(Number.isInteger(v1)) || v1 > vertices.length - 1) {\r\n            valid[0] = (\"error\");\r\n        }\r\n        if(!(Number.isInteger(v2)) || v2 > vertices.length - 1) {\r\n            valid[1] = \"error\";\r\n        }\r\n        if(v1 === v2) {\r\n            valid[0] = \"error\";\r\n            valid[1] = \"error\";\r\n        }\r\n        if(valid[0] === \"error\" || valid[1] === \"error\") {\r\n            return valid;\r\n        }\r\n        let key;\r\n        if(v1 > v2) {\r\n            key = v2 + \".\" + v1;\r\n        } else {\r\n            key = v1 + \".\" + v2;\r\n        }\r\n        if(edges.has(key)) {\r\n            return [\"error\", \"error\"]\r\n        } else {\r\n            setEdges(new Map(edges.set(key, {\r\n                \"id\": key,\r\n                \"node1\": v1,\r\n                \"node2\": v2,\r\n                \"bent\": false,\r\n                \"posX\": null,\r\n                \"posY\": null\r\n            })));\r\n\r\n\r\n            setBendPositions(new Map(bendPositions.set(key, {\r\n                \"id\": key,\r\n                \"bent\": false,\r\n                \"posX\": null,\r\n                \"posY\": null\r\n            })));\r\n\r\n            return [\"success\", \"success\"];\r\n        }\r\n    }\r\n\r\n    const deleteEdgeTest = (v1, v2) => {\r\n        let valid = [\"none\", \"none\"];\r\n        v1 = Number(v1);\r\n        v2 = Number(v2);\r\n\r\n        if(!(Number.isInteger(v1)) || v1 > vertices.length - 1) valid[0] = (\"error\");\r\n        \r\n        if(!(Number.isInteger(v2)) || v2 > vertices.length - 1) valid[1] = \"error\";\r\n        \r\n        if(v1 === v2) {\r\n            valid[0] = \"error\";\r\n            valid[1] = \"error\";\r\n        }\r\n\r\n        if(valid[0] === \"error\" || valid[1] === \"error\") return valid;\r\n        let key;\r\n\r\n        if(v1 > v2) {\r\n            key = v2 + \".\" + v1;\r\n        } else {\r\n            key = v1 + \".\" + v2;\r\n        }\r\n        if(!edges.has(key)) {\r\n            return [\"error\", \"error\"]\r\n        } else {\r\n            deleteEdge(key);\r\n            return [\"success\", \"success\"];\r\n        }\r\n    }\r\n\r\n    const centerGraph = () => {\r\n        let newVertices = [];\r\n        vertices.forEach(vertex => {\r\n            console.log(vertex);\r\n            vertex.posX = 750;\r\n            vertex.posY = 420;\r\n\r\n            newVertices.push(vertex);\r\n        })\r\n\r\n        setVertices(newVertices);\r\n        straightenEdges();\r\n    }\r\n\r\n    const [width, setWidth] = useState(window.innerWidth)\r\n\r\n    useEffect(() => {\r\n        if(updating) setUpdating(false);\r\n\r\n        const handleResize = () => setWidth(window.innerWidth);\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => {\r\n            window.removeEventListener(\"resize\", handleResize);\r\n        };\r\n    \r\n    \r\n    }, [edges, bendPositions, window.innerWidth])\r\n\r\n    const getReturn = () => {\r\n        if(window.innerWidth > \"670\") {\r\n            return (\r\n                <div style={{overflow:\"auto\"}}>\r\n                    <div style={{display:\"flex\", height: '92vh', width:'94vw', marginLeft:\"3vw\", marginRight:\"3vw\", marginTop:\"3vh\", marginBottom:\"2.75vh\", overflow:\"hidden\"}} \r\n                        onMouseDown={(e) => {tryAddVertex(e); setAddingVertex(false)}}>\r\n                        <Inputs setAddingVertex={setAddingVertex} straightenEdges={straightenEdges} addEdge={addEdge} setDeletingVertex={setDeletingVertex} deleteEdge={deleteEdgeTest}\r\n                                setGraph={setGraph} edges={edges} vertices={vertices} bendPositions={bendPositions}\r\n                                logIn={props.login} logOut={props.logout} loggedIn={props.loggedIn} centerGraph={centerGraph}\r\n                        />\r\n                        {updating ? <React.Fragment/> : <GraphVisual vertices={vertices} edges={edges} bendPositions={bendPositions} setVertices={setVertices} deletingVertex={deletingVertex}\r\n                                    setBendPositions={setBendPositions} onMouseDown={(e) => {tryAddVertex(e); setAddingVertex(false)}} deleteVertex={deleteVertex}/> }\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <Error />\r\n        }\r\n    }\r\n        \r\n    return (\r\n        <React.Fragment>\r\n            {getReturn()}\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {useLocation, withRouter} from 'react-router-dom';\r\n\r\nfunction TokenPage(props) {\r\n    const [id, setID] = useState((useLocation().pathname).replace(\"/confirm_email/\", \"\"));\r\n    const [message, setMessage] = useState(\"Temp\");\r\n    const submit = (e) => {\r\n        fetch('https://graphtt.herokuapp.com/confirm_email/' + id, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                'token': id // change here\r\n            }),\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        }).then(response => response.json()).then(msg => login(msg))\r\n    }\r\n\r\n    const login = (msg) => {\r\n        setMessage(msg);\r\n\r\n        if(msg.status === \"Accepted\") {\r\n            props.login(msg.email);\r\n            let k = window.location.href;\r\n            let m = k.search(\"/confirm_email\");\r\n            window.location.replace(k.substr(0,m));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.loggedIn === true) {\r\n            let k = window.location.href;\r\n            let m = k.search(\"/confirm_email\");\r\n            window.location.replace(k.substr(0,m));\r\n        } else {\r\n            submit();\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <h1>\r\n            {message.status}\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default withRouter(TokenPage)\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Switch, HashRouter as Router, Route, Redirect} from 'react-router-dom';\r\nimport Data from '../display/data/Data';\r\nimport TokenPage from '../display/authtokens/TokenPage';\r\n\r\nexport default function Routes() {\r\n  const [loggedIn, setLoggedIn] = useState(localStorage.getItem(\"loggedIn\"));\r\n  const [email, setEmail] = useState(localStorage.getItem(\"email\"));\r\n\r\n  const login = (email) => {\r\n    localStorage.setItem(\"loggedIn\", true);\r\n    localStorage.setItem(\"email\", email);\r\n    setLoggedIn(true);\r\n  }\r\n\r\n  const logOut = () => {\r\n    localStorage.setItem(\"loggedIn\", false);\r\n    localStorage.removeItem(\"email\");\r\n    setLoggedIn(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(localStorage.getItem(\"loggedIn\") == \"true\") {\r\n      setLoggedIn(true);\r\n    } else {\r\n      setLoggedIn(false);\r\n    }\r\n  \r\n  }, []);\r\n\r\n  return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\"><Data loggedIn={loggedIn} login={login} logout={logOut}/></Route>\r\n          <Route exact path=\"/confirm_email/:token\" component={() => <TokenPage loggedIn={loggedIn} login={login}/>}/>\r\n          <Route path='/'><Redirect to='/'/></Route>\r\n        </Switch>\r\n      </Router>\r\n  )\r\n}\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react'\r\nimport Graph from './logic/graph/Graph'\r\nimport GraphVisual from './display/graphs/GraphVisual'\r\nimport { useEffect, useState } from 'react'\r\nimport { BFSCycle, BFSNoRepeat, BFSRepeat } from './logic/algorithms/BFS'\r\nimport Components from './logic/algorithms/Components'\r\nimport 'antd/dist/antd.css';\r\nimport Routes from './routing/Routes'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    \r\n  })\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet>\r\n          <title>Graph Theory Tool</title>\r\n        </Helmet>\r\n      <Routes/>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n/*     let adj = [[0,1,0,1], [1,0,1,1], [0,1,0,1], [1,1,1,0]];\r\n    let graph = new Graph(adj);\r\n    let vertices = BFSCycle(graph, 0);\r\n\r\n    let k = new Components(graph);\r\n    console.log(k.getComponents());\r\n    console.log(k.getComponentCount()); */\r\n    ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}