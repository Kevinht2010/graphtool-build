{"version":3,"sources":["logo.svg","display/graphs/Node.js","display/graphs/Edge.js","display/graphs/GraphVisual.js","display/input/InputGraph.js","display/input/Profile.js","display/input/Inputs.js","display/error/Error.js","display/data/Data.js","display/authtokens/TokenPage.js","routing/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["Node","props","useState","position","setPosition","labelX","labelY","useEffect","style","userSelect","onMouseDown","e","dragStart","id","onMouseUp","dragEnd","cx","cy","r","stroke","stroke-width","fill","pointerEvents","textAnchor","transform","fontSize","dist","a","b","Math","sqrt","pow","Edge","c","d","node1","setNode1","node2","setNode2","bendPos","setBendPos","bent","posX","posY","points","A","B","C","angle","acos","K","sin","round","laf","PI","saf","join","calcCirclePath","pointer-events","shape-rendering","GraphVisual","mouseIn","setMouseIn","dragId","setDragId","isDraggingNode","setIsDraggingNode","isDraggingEdge","setIsDraggingEdge","originX","setOriginX","originY","setOriginY","prevPosition","setPrevPosition","node","deletingVertex","deleteVertex","clientX","clientY","vertices","bendPositions","get","edges","dragging","newX","newY","updateData","updateBendPositions","newVertices","slice","setVertices","newBendPositions","Map","set","setBendPositions","height","width","backgroundColor","onMouseOver","onMouseLeave","onMouseMove","forEach","edge","push","updateEdges","map","InputGraph","addEdge","v1","v2","test","Number","isInteger","length","key","console","log","this","i","valid","errors","neighbor","withRouter","email","setEmail","emailError","setEmailError","sent","setSent","graphSaved","setGraphSaved","graphRetrieved","setGraphRetrieved","failedRetrieve","setFailedRetrieve","modal","authenticate","String","toLowerCase","validateEmail","fetch","method","body","JSON","stringify","headers","then","response","json","msg","exit","setModal","successfullyRetrieved","Fragment","marginTop","message","type","showIcon","successfullySaved","unsuccessfulRetrieve","loggedIn","footer","onClick","logOut","top","bodyStyle","minHeight","title","localStorage","getItem","visible","onOk","onCancel","display","justifyContent","marginBottom","flexWrap","margin","fontWeight","Array","from","entries","parse","bp","bentpos","setGraph","getProfile","marginRight","name","Item","label","onChange","target","value","getLogin","Inputs","showProperties","setShowProperties","showInput","setShowInput","properties","setProperties","editEdge","setEditEdge","setDeleteEdge","setAddEdge","addEdgeValidStatus1","setAddEdgeValidStatus1","addEdgeValidStatus2","setAddEdgeValidStatus2","setV1","setV2","verticesInput","setVerticesInput","vertexMessage","setVertexMessage","setEdges","edgesMessage","setEdgesMessage","profileModal","setProfileModal","options1","options2","options3","addEdges","inputGraph","clearInput","addOrDeleteEdge","bool","success","deleteEdge","k","marginLeft","straightenEdges","centerGraph","bottom","UserOutlined","logIn","m","addVertices","validateStatus","help","onPressEnter","autoComplete","min","max","defaultValue","newEdges","split","hasVertexCount","getGraphInput","content","data","item","Group","options","getProperties","initialValues","remember","getEditEdge","right","padding","setDeletingVertex","setAddingVertex","Error","Data","updating","setUpdating","edgesMap","bdMap","addingVertex","tryAddVertex","addVertex","x","y","idx","v","substr1","substr","indexOf","substr2","newKey","newVal","newBendVal","deleteVertexHelper","splice","has","deleteEdgeTest","delete","vertex","window","innerWidth","setWidth","handleResize","addEventListener","removeEventListener","overflow","login","logout","useLocation","pathname","replace","setMessage","status","location","href","search","Routes","setLoggedIn","setItem","exact","path","removeItem","component","to","App","Helmet","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e66bf2c9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect, useRef} from 'react'\r\n\r\nexport default function Node(props) {\r\n    const [position, setPosition] = useState(props.position);\r\n    \r\n    const labelX = position[0];\r\n    const labelY = position[1];\r\n\r\n    useEffect(() => {\r\n        setPosition(props.position);\r\n    }, [props.position])\r\n\r\n    return (\r\n        <g style={{userSelect:\"none\"}} onMouseDown={e => props.dragStart(e, props.id, true)} onMouseUp={(e) => props.dragEnd(e)}>\r\n            <circle cx={labelX} cy={labelY} r=\"40\" stroke=\"#2ab863\" stroke-width=\"4\" fill=\"#ccffcf\"/>\r\n            <text pointerEvents={\"none\"} textAnchor=\"middle\" transform={`translate(${labelX}, ${labelY + 5})`} fontSize=\"20\">{props.id}</text>\r\n        </g>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\n\r\nfunction Edge(props) {\r\n    const [node1, setNode1] = useState(props.node1);\r\n    const [node2, setNode2] = useState(props.node2);\r\n    const [bendPos, setBendPos] = useState(props.bendPos);\r\n\r\n    let c;\r\n    let d;\r\n    if(props.bendPos.bent === false) {\r\n        c = [(node1.posX + node2.posX)/2, (node1.posY + node2.posY)/2];\r\n        d = \"M \" + node1.posX + \" \" + node1.posY + \" Q \" + c[0] + \" \" + c[1] + \" \" + node2.posX + \" \" + node2.posY;\r\n    } else {\r\n        c = [props.bendPos.posX, props.bendPos.posY];\r\n        d = calcCirclePath([[node2.posX, node2.posY], c, [node1.posX, node1.posY]]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setNode1(props.node1); setNode2(props.node2);\r\n        setBendPos(props.bendPos);\r\n    }, [props.node1, props.node2, props.bendPos])\r\n\r\n    return (\r\n        <svg>\r\n            <svg>\r\n                <circle onMouseDown={(e) => {props.dragStart(e, props.id, false);}} onMouseUp={(e) => props.dragEnd(e)} cx={c[0]} cy={c[1]} r={6}/>\r\n            </svg>\r\n            <svg>\r\n                <path pointer-events=\"none\" d={d} stroke=\"black\" fill=\"transparent\" stroke-width=\"3\" shape-rendering=\"geometricPrecision\"/>\r\n            </svg>\r\n        </svg>\r\n    )\r\n}\r\n\r\nfunction calcCirclePath(points){\r\n    var a = points[0]\r\n    var b = points[2]\r\n    var c = points[1]\r\n  \r\n    var A = dist(b, c)\r\n    var B = dist(c, a)\r\n    var C = dist(a, b)\r\n  \r\n    var angle = Math.acos((A*A + B*B - C*C)/(2*A*B))\r\n  \r\n    //calc radius of circle\r\n    var K = .5*A*B*Math.sin(angle)\r\n    var r = A*B*C/4/K\r\n    r = Math.round(r*1000)/1000\r\n  \r\n    //large arc flag\r\n    var laf = +(Math.PI/2 > angle)\r\n  \r\n    //sweep flag\r\n    var saf = +((b[0] - a[0])*(c[1] - a[1]) - (b[1] - a[1])*(c[0] - a[0]) < 0) \r\n  \r\n    return ['M', a, 'A', r, r, 0, laf, saf, b].join(' ')\r\n  }\r\n  \r\n  function dist(a, b){\r\n    return Math.sqrt(\r\n      Math.pow(a[0] - b[0], 2) +\r\n      Math.pow(a[1] - b[1], 2))\r\n  }\r\n\r\nexport default Edge\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport Node from './Node';\r\nimport Edge from './Edge';\r\n\r\nexport default function GraphVisual(props) {\r\n    const [mouseIn, setMouseIn] = useState(false);\r\n    const [dragId, setDragId] = useState();\r\n    const [isDraggingNode, setIsDraggingNode] = useState(false);\r\n    const [isDraggingEdge, setIsDraggingEdge] = useState(false);\r\n\r\n    const [originX, setOriginX] = useState(0);\r\n    const [originY, setOriginY] = useState(0);\r\n    const [prevPosition, setPrevPosition] = useState([]);\r\n\r\n    const dragStart = (e, id, node) => {\r\n        if(mouseIn === true) {\r\n            if(props.deletingVertex) {\r\n                props.deleteVertex(id);\r\n                return;\r\n            }\r\n            setDragId(id);\r\n            setOriginX(e.clientX);\r\n            setOriginY(e.clientY);\r\n\r\n            if(node) {\r\n                setIsDraggingNode(true);\r\n                setPrevPosition([props.vertices[id].posX, props.vertices[id].posY]);\r\n            } else {\r\n                setIsDraggingEdge(true);\r\n                if(props.bendPositions.get(id).bent === true) {\r\n                    setPrevPosition([props.bendPositions.get(id).posX, props.bendPositions.get(id).posY]);\r\n                } else {  \r\n                    let node1 = props.vertices[props.edges.get(id).node1];\r\n                    let node2 = props.vertices[props.edges.get(id).node2];\r\n                    setPrevPosition([(node1.posX + node2.posX) / 2, (node1.posY + node2.posY) / 2]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const dragging = (e) => {\r\n        if(isDraggingNode && mouseIn) {\r\n            let newX = e.clientX - originX;\r\n            let newY =  e.clientY - originY;\r\n            updateData({\r\n                \"id\": dragId, \r\n                \"posX\": prevPosition[0] + newX, \r\n                \"posY\": prevPosition[1] + newY\r\n            });\r\n        } else if(isDraggingEdge && mouseIn) {\r\n            let newX = e.clientX - originX;\r\n            let newY =  e.clientY - originY;\r\n            updateBendPositions({\r\n                \"id\": dragId, \r\n                \"posX\": prevPosition[0] + newX, \r\n                \"posY\": prevPosition[1] + newY,\r\n                \"bent\": true\r\n            });\r\n        }\r\n    }\r\n\r\n    const dragEnd = () => {\r\n        setIsDraggingNode(false);\r\n        setIsDraggingEdge(false);\r\n    }\r\n\r\n    const updateData = (a) => {\r\n        let newVertices = props.vertices.slice(0);\r\n        newVertices[a.id] = a;\r\n        props.setVertices(newVertices);\r\n    }\r\n\r\n    const updateBendPositions = (a) => {\r\n        let newBendPositions = new Map(props.bendPositions.set(a.id, a));\r\n        props.setBendPositions(newBendPositions);\r\n    }\r\n\r\n    const updateVertices = (a) => {\r\n        return props.vertices.map(node => {\r\n            return (<Node dragStart={dragStart} dragEnd={dragEnd} id={node.id} position={[node.posX, node.posY]}/>);\r\n        })\r\n    }\r\n\r\n    const updateEdges = (a) => {\r\n        let e = [];\r\n        props.edges.forEach((edge) => {\r\n            e.push(<Edge dragStart={dragStart} dragEnd={dragEnd} id={edge.id} node1={props.vertices[edge.node1]} \r\n                    node2={props.vertices[edge.node2]} bendPos={props.bendPositions.get(edge.id)}/>)\r\n        })\r\n        return e;\r\n    }\r\n\r\n    useEffect(() => {}, [props.vertices, props.bendPositions, props.bendPositions, props.edges, props.vertices])\r\n\r\n    return (\r\n        <svg style={{height:\"600vh\", width:\"600vw\", backgroundColor: '#dbedff'}} \r\n            onMouseOver={() => {setMouseIn(true)}} onMouseLeave={(e) => {dragging(e); setMouseIn(false); dragEnd()}}\r\n            onMouseMove={(e) => {dragging(e)}} onMouseUp={() => dragEnd()}>\r\n            {updateEdges()}\r\n            {updateVertices()}\r\n        </svg>\r\n    )\r\n}\r\n\r\n","export default class InputGraph {\r\n    constructor(vertices, edges) {\r\n        console.log(edges);\r\n        this.vertices = [];\r\n        for(let i = 0; i < vertices; ++i) {\r\n            this.vertices.push({\"id\": i, \"posX\": 500, \"posY\": 500});\r\n        }\r\n\r\n        this.edges = new Map;\r\n        this.bendPositions = new Map;\r\n        this.valid = true;\r\n        this.errors = [];\r\n        for(let i = 0; i < edges.length; ++i) {\r\n            this.errors.push(\"none\");\r\n            for(let neighbor of edges[i]) {\r\n                if(!this.addEdge(i, neighbor)) {\r\n                    this.valid = false;\r\n                    this.errors[i] = (\"error\");\r\n                    break;\r\n                } else if (neighbor === \"\") {\r\n                    this.errors[i] = (\"error\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    addEdge = (v1, v2) => {\r\n        if(!(/^\\d+$/.test(v1)) || !(/^\\d+$/.test(v2))) {\r\n            return false;\r\n        }\r\n\r\n        v1 = Number(v1);\r\n        v2 = Number(v2);\r\n        if(!(Number.isInteger(v1)) || v1 > this.vertices.length - 1) {\r\n            return false;\r\n        }\r\n        if(!(Number.isInteger(v2)) || v2 > this.vertices.length - 1) {\r\n            return false;\r\n        }\r\n\r\n        if(v1 == v2) {\r\n            return false;\r\n        }\r\n        \r\n        let key;\r\n        if(v1 > v2) {\r\n            key = v2 + \".\" + v1;\r\n        } else {\r\n            key = v1 + \".\" + v2;\r\n        }\r\n        \r\n        this.edges.set(key, {\r\n            \"id\": key,\r\n            \"node1\": v1,\r\n            \"node2\": v2,\r\n            \"bent\": false,\r\n            \"posX\": null,\r\n            \"posY\": null\r\n        });\r\n\r\n\r\n        this.bendPositions.set(key, {\r\n            \"id\": key,\r\n            \"bent\": false,\r\n            \"posX\": null,\r\n            \"posY\": null\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n}","import React, {useEffect, useState} from 'react'\r\nimport { Alert, Button, Modal, Input, Form, InputNumber } from 'antd';\r\nimport { useLocation, withRouter } from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\nfunction Profile(props) {\r\n    const [email, setEmail] = useState();\r\n    const [emailError, setEmailError] = useState(false);\r\n    const [sent, setSent] = useState(false);\r\n    const [graphSaved, setGraphSaved] = useState(false);\r\n    const [graphRetrieved, setGraphRetrieved] = useState(false);\r\n    const [failedRetrieve, setFailedRetrieve] = useState(false);\r\n \r\n    useEffect(() => {}, [props.modal]);\r\n\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    const authenticate = (email) => {\r\n        if(validateEmail(email)) {\r\n            fetch('https://graphtt.herokuapp.com/login', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    'email': email, // change here\r\n                    'route': \"https://kevinht2010.github.io/graphtool/#/\"\r\n                }),\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            }).then(response => response.json()).then(msg => setSent(true))\r\n        } else {\r\n            setEmailError(true);\r\n        }\r\n    }\r\n\r\n    const getGraph = () => {\r\n        if(props.loggedIn == true) {\r\n            fetch('https://graphtt.herokuapp.com/api/retrieve', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    'type': \"retrieve\",\r\n                    'email': localStorage.getItem(\"email\")\r\n                }),\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            }).then(response => response.json()).then(msg => {console.log(msg); setGraphRetrieved(true)\r\n                let e = new Map(JSON.parse(msg.edges));\r\n                let bp = new Map(JSON.parse(msg.bentpos));\r\n                props.setGraph(e, JSON.parse(msg.vertices), bp);\r\n            })\r\n        }\r\n    }\r\n\r\n    const saveGraph = () => {\r\n        console.log(props.bendPositions)\r\n        if(props.loggedIn == true) {\r\n            fetch('https://graphtt.herokuapp.com/api/upload', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    'type': \"upload\",\r\n                    'email': localStorage.getItem(\"email\"),\r\n                    'edges': JSON.stringify(Array.from(props.edges.entries())),\r\n                    'vertices': JSON.stringify(props.vertices),\r\n                    'bentpos': JSON.stringify(Array.from(props.bendPositions.entries()))\r\n                }),\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            }).then(response => response.json()).then(msg => {setGraphSaved(true)})\r\n        }\r\n    }\r\n\r\n    const exit = () => {\r\n        props.setModal(false); setEmailError(false); setSent(false); setGraphRetrieved(false); setGraphSaved(false); setFailedRetrieve(false);\r\n    }\r\n\r\n    const getProfile = () => {\r\n        let footer = (\r\n            <React.Fragment>\r\n                <Button key=\"back\" onClick={() => {exit()}}>\r\n                    Return\r\n                </Button>\r\n                <Button type=\"primary\" key=\"back\" onClick={() => {exit(); props.logOut()}}>\r\n                    Log out\r\n                </Button>\r\n            </React.Fragment>\r\n        )\r\n\r\n        return (\r\n            <Modal style={{top: \"22%\"}} width={\"550px\"} bodyStyle={{minHeight:\"120px\"}} title={\"Logged into \" + localStorage.getItem(\"email\")} visible={props.modal} \r\n                    onOk={() => {exit()}} onCancel={() => {exit()}}\r\n                    footer={footer}>\r\n                <div style={{display:'flex', width:\"100%\", justifyContent:\"center\", marginBottom:\"5px\", marginTop:\"-15px\", flexWrap:\"wrap\"}}>\r\n                    <div style={{display:\"flex\", flexWrap:'wrap', justifyContent:\"center\", width:\"220px\"}}>\r\n                        <div style={{margin:\"14px\", fontSize:\"18px\", fontWeight:\"480\"}}>Save current graph:</div>\r\n                        <Button type=\"primary\" onClick={() => {saveGraph(); setGraphSaved(false); setGraphRetrieved(false); setFailedRetrieve(false)}}>\r\n                            Save Graph\r\n                        </Button>\r\n                    </div>\r\n                    <div style={{display:\"flex\", flexWrap:'wrap', justifyContent:\"center\", width:\"220px\"}}>\r\n                        <div style={{margin:\"14px\", fontSize:\"18px\", fontWeight:\"480\"}}>Retrieve saved graph:</div>\r\n                        <Button type=\"primary\" onClick={() => {getGraph(); setGraphSaved(false); setGraphRetrieved(false); setFailedRetrieve(false)}}>\r\n                            Retrieve Graph\r\n                        </Button>\r\n                    </div>\r\n                    <div style={{marginTop:\"45px\", marginBottom:\"-15px\"}}>(Currently this feature is limited to 1 graph per user)</div>\r\n                </div>\r\n                {graphSaved ? successfullySaved() : <React.Fragment/>}\r\n                {graphRetrieved ? successfullyRetrieved() : <React.Fragment/>}\r\n                {failedRetrieve ? unsuccessfulRetrieve() : <React.Fragment/>}\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    const sentMessage = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"23px\"}}>\r\n                    <Alert message={\"Email successfully sent to \" + email} type=\"success\" showIcon/>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const emailErrorMessage = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"23px\"}}>\r\n                    <Alert message=\"Invalid Email\" type=\"error\" showIcon />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const successfullyRetrieved = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"25px\"}}>\r\n                    <Alert message={\"Graph successfully retrieved\"} type=\"success\" showIcon/>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const successfullySaved = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"25px\"}}>\r\n                    <Alert message={\"Graph successfully saved\"} type=\"success\" showIcon/>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const unsuccessfulRetrieve = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{height:\"40px\", width:\"100%\", marginTop:\"25px\"}}>\r\n                    <Alert message=\"No graph to retrieve. Save a graph first!\" type=\"error\" showIcon />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const getLogin = () => {\r\n        let footer = (\r\n            <React.Fragment>\r\n                <Button key=\"back\" onClick={() => {exit()}} style={{marginTop:\"10px\", marginBottom:\"10px\", marginRight:\"46%\"}}>\r\n                    Return\r\n                </Button>\r\n                <Button type=\"primary\" key=\"back\" onClick={() => {authenticate(email)}}>\r\n                    Send Confirmation Email\r\n                </Button>\r\n            </React.Fragment>\r\n        )\r\n\r\n        return (\r\n            <Modal style={{top: \"22%\"}} width={\"550px\"} bodyStyle={{minHeight:\"100px\"}} title=\"Log In To Save Graphs\" visible={props.modal} \r\n                    onOk={() => {exit()}} onCancel={() => {exit()}}\r\n                    footer={footer} onClick={() => setEmailError(false)}>\r\n                <div onClick={() => {setEmailError(false);}}>\r\n                <Form name=\"basic\" style={{height:\"30px\"}}>\r\n                    <Form.Item\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                    >\r\n                        <Input onChange={(e) => {setEmail(e.target.value)}}/>\r\n                    </Form.Item>\r\n                </Form>\r\n                {sent ? sentMessage() : <React.Fragment/>}\r\n                {emailError ? emailErrorMessage() : <React.Fragment/>}\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.loggedIn == true ?  getProfile() : getLogin()}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(Profile)\r\n","import React, {useState, useEffect} from 'react'\r\nimport InputGraph from './InputGraph'\r\nimport { Button, Modal, Checkbox, Input, Form, InputNumber, Alert } from 'antd';\r\nimport {UserOutlined} from '@ant-design/icons'\r\nimport Profile from './Profile.js'\r\n\r\n\r\n\r\n// Will Refactor Soon\r\n\r\n\r\n\r\nexport default function Inputs(props) {\r\n    const [showProperties, setShowProperties] = useState(false);\r\n    const [showInput, setShowInput] = useState(false);\r\n    const [properties, setProperties] = useState([{\"id\": \"cycles\", \"value\": \"5\"}]);\r\n\r\n    const [editEdge, setEditEdge] = useState(false);\r\n    const [deleteEdge, setDeleteEdge] = useState(false);\r\n    const [addEdge, setAddEdge] = useState(false);\r\n    const [addEdgeValidStatus1, setAddEdgeValidStatus1] = useState(\"none\");\r\n    const [addEdgeValidStatus2, setAddEdgeValidStatus2] = useState(\"none\");\r\n\r\n    const [v1, setV1] = useState(\"\");\r\n    const [v2, setV2] = useState(\"\");\r\n\r\n    const [verticesInput, setVerticesInput] = useState(1);\r\n    const [vertices, setVertices] = useState(0);\r\n    const [vertexMessage, setVertexMessage] = useState();\r\n    const [edges, setEdges] = useState();\r\n    const [edgesMessage, setEdgesMessage] = useState();\r\n\r\n    const [profileModal, setProfileModal] = useState(false);\r\n\r\n    const options1 = [\"Components\", \"Hamiltonian Cycles\"];\r\n    const options2 = [\"Spanning Trees\", \"Euler Tours\"];\r\n    const options3 = [\"Planarity\", \"Longest/Shortest Cycles\"];\r\n\r\n    const addVertices = () => {\r\n        setVertices(verticesInput);\r\n        let k = Array(verticesInput);\r\n        k.fill([]);\r\n        setEdges(k);\r\n        let m = Array(verticesInput);\r\n        m.fill(\"none\")\r\n        setEdgesMessage(m);\r\n    }\r\n\r\n    const addEdges = () => {\r\n        let inputGraph = new InputGraph(vertices, edges);\r\n        if(inputGraph.valid === true) {\r\n            props.setGraph(inputGraph.edges, inputGraph.vertices, inputGraph.bendPositions);\r\n            clearInput();\r\n        } else {\r\n            setEdgesMessage(inputGraph.errors);\r\n        }\r\n    }\r\n\r\n    const clearInput = () => {\r\n        setVertices(0);\r\n        setShowInput(false); \r\n        setVertexMessage(\"none\");\r\n        setEdges();\r\n        setEdgesMessage();\r\n    }\r\n\r\n    const getGraphInput = () => {\r\n        const footer = (\r\n            <React.Fragment>\r\n                <Button key=\"back\" onClick={() => {clearInput()}}>\r\n                    Cancel\r\n                </Button>\r\n                <Button type=\"primary\" onClick={() => {\r\n                        vertices === 0 ? addVertices() : addEdges();\r\n                    }\r\n                }>\r\n                    {vertices === 0 ? \"Continue\" : \"Input Graph\"}\r\n                </Button>\r\n            </React.Fragment>\r\n        )\r\n\r\n        const hasVertexCount = () => {\r\n            if(vertices === 0) {\r\n                return (\r\n                    <Form.Item\r\n                        label=\"Number of Vertices (Max 20)\"\r\n                        name=\"v1\"\r\n                        validateStatus={addEdgeValidStatus1}\r\n                        help={vertexMessage === \"error\" ? \"Invalid Input\" : null}\r\n                    >\r\n                        <InputNumber onPressEnter={(e) => {setVertices(verticesInput)}} autoComplete=\"off\" onChange={(value) => setVerticesInput(value)} \r\n                                    min={1} max={20} defaultValue={1}/>\r\n                    </Form.Item>\r\n                )\r\n            } else {\r\n                let k = [];\r\n                for(let i = 0; i < vertices; ++i) {\r\n                    k.push(\r\n                        <Form.Item\r\n                            validateStatus={edgesMessage[i]}\r\n                            help={edgesMessage[i] === \"error\" ? \"Invalid Input\" : null}\r\n                            label={JSON.stringify(i)}\r\n                        >\r\n                            <Input defaultValue=\"\" style={{width:\"70px\", margin:\"2px\"}} onPressEnter={(e) => {addEdges()}} autoComplete=\"off\" onChange={(e) => \r\n                                    {let newEdges = [...edges]; newEdges[i] = (e.target.value).split(\" \").join(\"\").split(\",\"); setEdges(newEdges);}} />\r\n                        </Form.Item>\r\n                    )\r\n                }\r\n                return (\r\n                    <React.Fragment>\r\n                        <div style={{marginTop:\"-15px\", marginBottom:\"35px\"}}>Edges (adjacency list, seperating neighbors of each vertex with commas)</div>\r\n                        <div style={{display:\"flex\", width:\"350px\", marginLeft:\"auto\", marginRight:\"auto\", flexWrap:\"wrap\", justifyContent:\"space-around\"}}>\r\n                            {k}\r\n                        </div>\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Modal style={{top: \"10%\"}} title=\"Input Graph\" visible={showInput} onCancel={() => {clearInput()}} footer={footer}>\r\n                 <div style={{display:\"flex\", width:\"100%\", justifyContent:\"center\", marginTop:\"10px\", marginBottom:\"-5px\", marginLeft:\"-10px\"}}>\r\n                    <Form\r\n                        onMouseDown={() => {setAddEdgeValidStatus1(\"none\")}}\r\n                        >\r\n                        {hasVertexCount()}\r\n                    </Form>\r\n                 </div>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    const getProperties = () => {\r\n        let content;\r\n        let footer;\r\n        if(properties.length > 0) {\r\n            const data = properties.map((item) => {\r\n                return <p>{item.id + \" \" + item.value}</p>\r\n            })\r\n\r\n            content = (\r\n                <React.Fragment>\r\n                    {data}\r\n                    <Alert message=\"This feature is still in progress - please check back in a few days!\" type=\"warning\" showIcon  />\r\n                </React.Fragment>\r\n            )\r\n\r\n            footer = (\r\n                <React.Fragment>\r\n                    <Button type=\"primary\" style={{marginRight:\"32%\"}} onClick={() => setProperties([])}>Generate Different Properties</Button>\r\n                    <Button key=\"back\" onClick={() => {setShowProperties(false)}}>\r\n                        Return\r\n                    </Button>\r\n                    <Button key=\"submit\" type=\"primary\" onClick={() => {setShowProperties(false)}}>\r\n                        Confirm\r\n                    </Button>\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            content = (\r\n                <React.Fragment>\r\n                    <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                        <Checkbox.Group style={{display:\"flex\", width:\"180px\", flexWrap:\"wrap\"}} options={options1} />\r\n                        <Checkbox.Group style={{display:\"flex\", width:\"180px\", flexWrap:\"wrap\"}} options={options2} />\r\n                        <Checkbox.Group style={{display:\"flex\", width:\"180px\", flexWrap:\"wrap\"}} options={options3} />\r\n                    </div>\r\n                    <Alert message=\"This feature is still in progress - please check back in a few days!\" type=\"warning\" style={{marginTop:\"40px\"}} showIcon  />\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        return (\r\n            <Modal style={{top: \"25%\"}} width={\"600px\"} bodyStyle={{minHeight:\"200px\"}} title=\"Graph Properties\" visible={showProperties} onOk={() => {setShowProperties(false)}} onCancel={() => {setShowProperties(false)}}\r\n                    footer={footer}>\r\n                {content}\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    const addOrDeleteEdge = (bool) => {\r\n        if(v1 !== \"\" && v2 !== \"\") {\r\n            let success;\r\n            if(bool) {\r\n                success = props.addEdge(v1, v2);\r\n            } else {\r\n                success = props.deleteEdge(v1, v2);\r\n            }\r\n            setAddEdgeValidStatus1(success[0]);\r\n            setAddEdgeValidStatus2(success[1]);\r\n            return success;\r\n        } else {\r\n            let k = [];\r\n            if(v1 === \"\") {\r\n                k.push(\"error\")\r\n            } else {\r\n                k.push(\"none\")\r\n            }\r\n\r\n            if(v2 === \"\") {\r\n                k.push(\"error\")\r\n            } else {\r\n                k.push(\"none\");\r\n            }\r\n            setAddEdgeValidStatus1(k[0]);\r\n            setAddEdgeValidStatus2(k[1]);\r\n            return k;\r\n        }\r\n    }\r\n\r\n    const getEditEdge = () => {\r\n        const footer = (\r\n            <React.Fragment>\r\n                <Button key=\"back\" onClick={() => {setEditEdge(false); setAddEdge(false); setDeleteEdge(false)}}>\r\n                    Return\r\n                </Button>\r\n                <Button type=\"primary\" onClick={() => {\r\n                        addEdge ? addOrDeleteEdge(true) : addOrDeleteEdge(false)\r\n                    }\r\n                }>\r\n                    {addEdge ? \"Add Edge\" : \"Delete Edge\"}\r\n                </Button>\r\n            </React.Fragment>\r\n        )\r\n\r\n        return (\r\n            <Modal style={{top: \"25%\"}} title={addEdge ? \"Add Edge\" : \"Delete Edge\"} visible={editEdge} onCancel={() => {setEditEdge(false); setAddEdge(false); setDeleteEdge(false);\r\n                    setAddEdgeValidStatus1(\"none\"); setAddEdgeValidStatus2(\"none\")}} footer={footer}>\r\n                 <div style={{display:\"flex\", width:\"100%\", justifyContent:\"center\", marginTop:\"10px\", marginBottom:\"-5px\", marginLeft:\"-10px\"}}>\r\n                    <Form\r\n                        initialValues={{ remember: true }}\r\n                        onMouseDown={() => {setAddEdgeValidStatus1(\"none\"); console.log(\"?\")\r\n                        setAddEdgeValidStatus2(\"none\")}}\r\n                        >\r\n                        <Form.Item\r\n                            label=\"Vertex 1\"\r\n                            name=\"v1\"\r\n                            validateStatus={addEdgeValidStatus1}\r\n                            help={addEdgeValidStatus1 === \"error\" ? \"Invalid Input\" : null}\r\n                        >\r\n                            <Input onPressEnter={(e) => {addEdge ? addOrDeleteEdge(true) : addOrDeleteEdge(false)}} autoComplete=\"off\" onChange={(e) => setV1(e.target.value)} />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            validateStatus={addEdgeValidStatus2}\r\n                            help={addEdgeValidStatus2 === \"error\" ? \"Invalid Input\" : null}\r\n                            label=\"Vertex 2\"\r\n                            name=\"v2\"\r\n                        >\r\n                            <Input onPressEnter={(e) => {addEdge ? addOrDeleteEdge(true) : addOrDeleteEdge(false)}} autoComplete=\"off\" onChange={(e) => setV2(e.target.value)} />\r\n                        </Form.Item>\r\n                    </Form>\r\n                 </div>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{position:\"absolute\", display:\"flex\", marginTop:\"20px\", marginLeft:\"20px\"}} >\r\n                <Button style={{margin: \"8px\", height:\"35px\", width:\"150px\", fontSize:\"15px\"}} type=\"primary\" onClick={() => setShowInput(true)}>Input Graph</Button>\r\n                <Button style={{margin: \"8px\", height:\"35px\", width:\"150px\", fontSize:\"15px\"}} type=\"primary\" onClick={() => {props.straightenEdges()}}>Straighten Edges</Button>\r\n                <Button style={{margin: \"8px\", height:\"35px\", width:\"150px\", fontSize:\"15px\"}} type=\"primary\" onClick={() => setShowProperties(true)}>Graph Properties</Button>\r\n                <Button style={{margin: \"8px\", height:\"35px\", width:\"150px\", fontSize:\"15px\"}} type=\"primary\" onClick={() => props.centerGraph()}>Center Graph</Button>\r\n            </div>\r\n            <div style={{position:\"absolute\", marginLeft:\"25px\", bottom:\"calc(6vh + 15px)\"}}>\r\n                <Button style={{width:\"55px\", height:\"45px\"}} type=\"primary\" onClick={() => setProfileModal(true)}>\r\n                    <UserOutlined style={{}}/>\r\n                </Button>\r\n            </div>\r\n            <Profile modal={profileModal} setModal={setProfileModal} loggedIn={props.loggedIn} logIn={props.logIn} logOut={props.logOut}\r\n                    edges={props.edges} vertices={props.vertices} bendPositions={props.bendPositions} setGraph={props.setGraph}\r\n                    />\r\n            {getGraphInput()}\r\n            {getProperties()}\r\n            {getEditEdge()}\r\n            <div style={{position:\"absolute\", display:\"flex\", right:\"3%\", bottom:\"6%\", flexWrap:\"wrap\", width:\"125px\"}}>\r\n                <Button style={{margin:\"8px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \r\n                        onClick={() => {setDeleteEdge(true); setEditEdge(true);}}>\r\n                    Delete Edge\r\n                </Button>\r\n                <Button style={{margin:\"8px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \r\n                        onClick={() => {props.setDeletingVertex(true)}}>\r\n                    Delete Node\r\n                </Button>\r\n                <Button style={{margin:\"8px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \r\n                    onClick={() => {setAddEdge(true); setEditEdge(true)}}>\r\n                    Add Edge\r\n                </Button>\r\n                <Button style={{margin:\"8px\", height:\"45px\", width:\"95px\", fontSize:\"15px\", padding:\"0px\"}} type=\"primary\" \r\n                    onClick={() => {props.setAddingVertex(true)}}>\r\n                    Add Node\r\n                </Button>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Alert} from 'antd'\r\n\r\nexport default function Error() {\r\n    return (\r\n        <div style={{width:\"100%\", height:\"100%\"}}>\r\n            <Alert message=\"Mobile view is still under construction! Please check in later (for now, please use the app on pc view - apologies for any inconveniences)\" type=\"warning\" showIcon  />\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport Inputs from '../../display/input/Inputs.js'\r\nimport GraphVisual from '../graphs/GraphVisual.js'\r\nimport Error from '../error/Error.js'\r\n\r\nexport default function Data(props) {\r\n    let tvertices = [{\r\n        \"id\": 0,\r\n        \"posX\": 850,\r\n        \"posY\": 200\r\n    }, {\r\n        \"id\": 1,\r\n        \"posX\": 1150,\r\n        \"posY\": 400\r\n    }, {\r\n        \"id\": 2,\r\n        \"posX\": 550,\r\n        \"posY\": 400\r\n    }, {\r\n        \"id\": 3,\r\n        \"posX\": 1050,\r\n        \"posY\": 720\r\n    }, {\r\n        \"id\": 4,\r\n        \"posX\": 650,\r\n        \"posY\": 720\r\n    }]\r\n\r\n    const [updating, setUpdating] = useState(false);\r\n    const [vertices, setVertices] = useState(null)\r\n\r\n    const edgesArray = [{\r\n        \"id\": \"0.1\",\r\n        \"node1\": 0,\r\n        \"node2\": 1,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"1.2\",\r\n        \"node1\": 1,\r\n        \"node2\": 2,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"1.3\",\r\n        \"node1\": 1,\r\n        \"node2\": 3,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"0.2\",\r\n        \"node1\": 0,\r\n        \"node2\": 2,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"0.3\",\r\n        \"node1\": 0,\r\n        \"node2\": 3,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"2.3\",\r\n        \"node1\": 2,\r\n        \"node2\": 3,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"0.4\",\r\n        \"node1\": 0,\r\n        \"node2\": 4,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"1.4\",\r\n        \"node1\": 1,\r\n        \"node2\": 4,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"2.4\",\r\n        \"node1\": 2,\r\n        \"node2\": 4,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }, {\r\n        \"id\": \"3.4\",\r\n        \"node1\": 3,\r\n        \"node2\": 4,\r\n        \"bent\": false,\r\n        \"posX\": null,\r\n        \"posY\": null\r\n    }]\r\n\r\n    let edgesMap = new Map();\r\n    let bdMap = new Map();\r\n\r\n    edgesArray.forEach(edge => {\r\n        edgesMap.set(edge.node1 + \".\" + edge.node2, edge);\r\n        bdMap.set(edge.node1 + \".\" + edge.node2, {\"id\": edge.id, \"bent\":edge.bent, \"posX\": edge.posX, \"posY\":edge.posY});\r\n    })\r\n\r\n    const [edges, setEdges] = useState(null);\r\n    const [addingVertex, setAddingVertex] = useState(false);\r\n    const [deletingVertex, setDeletingVertex] = useState(false);\r\n    const [bendPositions, setBendPositions] = useState(null);\r\n\r\n    const setGraph = (edges, vertices, bp) => {\r\n        setUpdating(true);\r\n        setVertices(vertices);\r\n        setEdges(edges);\r\n        setBendPositions(bp);\r\n    }\r\n\r\n    if(vertices === null) {\r\n        setGraph(edgesMap, tvertices, bdMap)\r\n    }\r\n\r\n    const tryAddVertex = (e) => {\r\n        if(addingVertex && vertices.length <= 30) {\r\n            addVertex(e.clientX - 45, e.clientY - 10)\r\n        }\r\n        setAddingVertex(false);\r\n    }\r\n\r\n    const addVertex = (x, y) => {\r\n        vertices.push({\"id\": vertices.length, \"posX\": x, \"posY\":y});\r\n    }\r\n\r\n    const straightenEdges = () => {\r\n        edges.forEach(edge => {\r\n            bdMap.set(edge.node1 + \".\" + edge.node2, {\"id\": edge.id, \"bent\":false, \"posX\": 0, \"posY\": 0});\r\n        })\r\n\r\n        setBendPositions(bdMap);\r\n    }\r\n\r\n    const deleteVertex = (idx) => {\r\n        let newEdges = new Map();\r\n        let newBendPositions = new Map();\r\n        edges.forEach((v) => {\r\n            let key = v.id;\r\n            let substr1 = Number(key.substr(0, key.indexOf('.')));\r\n            let substr2 = Number(key.substr(key.indexOf('.') + 1, key.length - 1));\r\n\r\n            if(substr1 !== idx && substr2 !== idx) {\r\n                if(substr1> idx) --substr1;\r\n                if(substr2 > idx) --substr2;\r\n\r\n                let newKey = substr1 + \".\" + substr2;\r\n                let newVal = v;\r\n                newVal[\"id\"] = newKey;\r\n                newVal[\"node1\"] = substr1;\r\n                newVal[\"node2\"] = substr2;\r\n                let newBendVal = bendPositions.get(key);\r\n                newBendVal[\"id\"] = newKey;\r\n\r\n                newEdges.set(substr1 + \".\" + substr2, newVal);\r\n                newBendPositions.set(substr1 + \".\" + substr2, newBendVal);\r\n            }\r\n        })\r\n        setEdges(newEdges);\r\n        setBendPositions(newBendPositions);\r\n        setDeletingVertex(false);\r\n        deleteVertexHelper(idx)\r\n    }\r\n\r\n    const deleteVertexHelper = (idx) => {\r\n        let k = vertices;\r\n        k.splice(idx, 1);\r\n        for(let i = idx; i < k.length; ++i) {\r\n            --k[i].id;\r\n        }\r\n        setVertices(k);\r\n    }\r\n\r\n    const deleteEdge = (key) => {\r\n        let k = new Map(edges);\r\n        k.delete(key);\r\n        let b = new Map(bendPositions);\r\n        b.delete(key);\r\n        setEdges(k);\r\n        setBendPositions(b);\r\n    }\r\n\r\n    const addEdge = (v1, v2) => {\r\n        let valid = [\"none\", \"none\"];\r\n        v1 = Number(v1);\r\n        v2 = Number(v2);\r\n        if(!(Number.isInteger(v1)) || v1 > vertices.length - 1) {\r\n            valid[0] = (\"error\");\r\n        }\r\n        if(!(Number.isInteger(v2)) || v2 > vertices.length - 1) {\r\n            valid[1] = \"error\";\r\n        }\r\n        if(v1 === v2) {\r\n            valid[0] = \"error\";\r\n            valid[1] = \"error\";\r\n        }\r\n        if(valid[0] === \"error\" || valid[1] === \"error\") {\r\n            return valid;\r\n        }\r\n        let key;\r\n        if(v1 > v2) {\r\n            key = v2 + \".\" + v1;\r\n        } else {\r\n            key = v1 + \".\" + v2;\r\n        }\r\n        if(edges.has(key)) {\r\n            return [\"error\", \"error\"]\r\n        } else {\r\n            setEdges(new Map(edges.set(key, {\r\n                \"id\": key,\r\n                \"node1\": v1,\r\n                \"node2\": v2,\r\n                \"bent\": false,\r\n                \"posX\": null,\r\n                \"posY\": null\r\n            })));\r\n\r\n\r\n            setBendPositions(new Map(bendPositions.set(key, {\r\n                \"id\": key,\r\n                \"bent\": false,\r\n                \"posX\": null,\r\n                \"posY\": null\r\n            })));\r\n\r\n            return [\"success\", \"success\"];\r\n        }\r\n    }\r\n\r\n    const deleteEdgeTest = (v1, v2) => {\r\n        let valid = [\"none\", \"none\"];\r\n        v1 = Number(v1);\r\n        v2 = Number(v2);\r\n\r\n        if(!(Number.isInteger(v1)) || v1 > vertices.length - 1) valid[0] = (\"error\");\r\n        \r\n        if(!(Number.isInteger(v2)) || v2 > vertices.length - 1) valid[1] = \"error\";\r\n        \r\n        if(v1 === v2) {\r\n            valid[0] = \"error\";\r\n            valid[1] = \"error\";\r\n        }\r\n\r\n        if(valid[0] === \"error\" || valid[1] === \"error\") return valid;\r\n        let key;\r\n\r\n        if(v1 > v2) {\r\n            key = v2 + \".\" + v1;\r\n        } else {\r\n            key = v1 + \".\" + v2;\r\n        }\r\n        if(!edges.has(key)) {\r\n            return [\"error\", \"error\"]\r\n        } else {\r\n            deleteEdge(key);\r\n            return [\"success\", \"success\"];\r\n        }\r\n    }\r\n\r\n    const centerGraph = () => {\r\n        let newVertices = [];\r\n        vertices.forEach(vertex => {\r\n            console.log(vertex);\r\n            vertex.posX = 750;\r\n            vertex.posY = 420;\r\n\r\n            newVertices.push(vertex);\r\n        })\r\n\r\n        setVertices(newVertices);\r\n        straightenEdges();\r\n    }\r\n\r\n    const [width, setWidth] = useState(window.innerWidth)\r\n\r\n    useEffect(() => {\r\n        if(updating) setUpdating(false);\r\n\r\n        const handleResize = () => setWidth(window.innerWidth);\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => {\r\n            window.removeEventListener(\"resize\", handleResize);\r\n        };\r\n    \r\n    \r\n    }, [edges, bendPositions, window.innerWidth])\r\n\r\n    const getReturn = () => {\r\n        if(window.innerWidth > \"670\") {\r\n            return (\r\n                <div style={{overflow:\"auto\"}}>\r\n                    <div style={{display:\"flex\", height: '92vh', width:'94vw', marginLeft:\"3vw\", marginRight:\"3vw\", marginTop:\"3vh\", marginBottom:\"2.75vh\", overflow:\"hidden\"}} \r\n                        onMouseDown={(e) => {tryAddVertex(e); setAddingVertex(false)}}>\r\n                        <Inputs setAddingVertex={setAddingVertex} straightenEdges={straightenEdges} addEdge={addEdge} setDeletingVertex={setDeletingVertex} deleteEdge={deleteEdgeTest}\r\n                                setGraph={setGraph} edges={edges} vertices={vertices} bendPositions={bendPositions}\r\n                                logIn={props.login} logOut={props.logout} loggedIn={props.loggedIn} centerGraph={centerGraph}\r\n                        />\r\n                        {updating ? <React.Fragment/> : <GraphVisual vertices={vertices} edges={edges} bendPositions={bendPositions} setVertices={setVertices} deletingVertex={deletingVertex}\r\n                                    setBendPositions={setBendPositions} onMouseDown={(e) => {tryAddVertex(e); setAddingVertex(false)}} deleteVertex={deleteVertex}/> }\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <Error />\r\n        }\r\n    }\r\n        \r\n    return (\r\n        <React.Fragment>\r\n            {getReturn()}\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {useLocation, withRouter} from 'react-router-dom';\r\n\r\nfunction TokenPage(props) {\r\n    const [id, setID] = useState((useLocation().pathname).replace(\"/confirm_email/\", \"\"));\r\n    const [message, setMessage] = useState(\"Temp\");\r\n    const submit = (e) => {\r\n        fetch('https://graphtt.herokuapp.com/confirm_email/' + id, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                'token': id // change here\r\n            }),\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        }).then(response => response.json()).then(msg => login(msg))\r\n    }\r\n\r\n    const login = (msg) => {\r\n        setMessage(msg);\r\n\r\n        if(msg.status === \"Accepted\") {\r\n            props.login(msg.email);\r\n            let k = window.location.href;\r\n            let m = k.search(\"/confirm_email\");\r\n            window.location.replace(k.substr(0,m));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.loggedIn === true) {\r\n            let k = window.location.href;\r\n            let m = k.search(\"/confirm_email\");\r\n            window.location.replace(k.substr(0,m));\r\n        } else {\r\n            submit();\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <h1>\r\n            {message.status}\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default withRouter(TokenPage)\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Switch, HashRouter as Router, Route, Redirect} from 'react-router-dom';\r\nimport Data from '../display/data/Data';\r\nimport TokenPage from '../display/authtokens/TokenPage';\r\n\r\nexport default function Routes() {\r\n  const [loggedIn, setLoggedIn] = useState(localStorage.getItem(\"loggedIn\"));\r\n  const [email, setEmail] = useState(localStorage.getItem(\"email\"));\r\n\r\n  const login = (email) => {\r\n    localStorage.setItem(\"loggedIn\", true);\r\n    localStorage.setItem(\"email\", email);\r\n    setLoggedIn(true);\r\n  }\r\n\r\n  const logOut = () => {\r\n    localStorage.setItem(\"loggedIn\", false);\r\n    localStorage.removeItem(\"email\");\r\n    setLoggedIn(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(localStorage.getItem(\"loggedIn\") == \"true\") {\r\n      setLoggedIn(true);\r\n    } else {\r\n      setLoggedIn(false);\r\n    }\r\n  \r\n  }, []);\r\n\r\n  return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\"><Data loggedIn={loggedIn} login={login} logout={logOut}/></Route>\r\n          <Route exact path=\"/confirm_email/:token\" component={() => <TokenPage loggedIn={loggedIn} login={login}/>}/>\r\n          <Route path='/'><Redirect to='/'/></Route>\r\n        </Switch>\r\n      </Router>\r\n  )\r\n}\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react'\r\nimport Graph from './logic/graph/Graph'\r\nimport GraphVisual from './display/graphs/GraphVisual'\r\nimport { useEffect, useState } from 'react'\r\nimport { BFSCycle, BFSNoRepeat, BFSRepeat } from './logic/algorithms/BFS'\r\nimport Components from './logic/algorithms/Components'\r\nimport 'antd/dist/antd.css';\r\nimport Routes from './routing/Routes'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    \r\n  })\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet>\r\n          <title>Graph Theory Tool</title>\r\n        </Helmet>\r\n      <Routes/>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n/*     let adj = [[0,1,0,1], [1,0,1,1], [0,1,0,1], [1,1,1,0]];\r\n    let graph = new Graph(adj);\r\n    let vertices = BFSCycle(graph, 0);\r\n\r\n    let k = new Components(graph);\r\n    console.log(k.getComponents());\r\n    console.log(k.getComponentCount()); */\r\n    ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}